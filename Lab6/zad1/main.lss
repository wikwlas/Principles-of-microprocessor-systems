
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  000013f4  00001488  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000033  00800090  00800090  000014b8  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000014b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00001508  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f49  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008e8  00000000  00000000  000024b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000490  00000000  00000000  00002da1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a8  00000000  00000000  00003234  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000442  00000000  00000000  000033dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000876  00000000  00000000  0000381e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00004094  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bb 00 	jmp	0x176	; 0x176 <__ctors_end>
       4:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
       8:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
       c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      10:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      14:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      18:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      1c:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__vector_7>
      20:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      24:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      28:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      2c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      30:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      34:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      38:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      3c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      40:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      44:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      48:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      4c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      50:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__c.2127>:
     156:	50 53 4d 2e 4c 41 42 45 2e 57 46 2e 50 57 00        PSM.LABE.WF.PW.

00000165 <__c.2125>:
     165:	53 50 49 20 41 2f 44 20 63 6f 6e 76 20 32 2e 31     SPI A/D conv 2.1
	...

00000176 <__ctors_end>:
     176:	11 24       	eor	r1, r1
     178:	1f be       	out	0x3f, r1	; 63
     17a:	cf e5       	ldi	r28, 0x5F	; 95
     17c:	d8 e0       	ldi	r29, 0x08	; 8
     17e:	de bf       	out	0x3e, r29	; 62
     180:	cd bf       	out	0x3d, r28	; 61

00000182 <__do_copy_data>:
     182:	10 e0       	ldi	r17, 0x00	; 0
     184:	a0 e6       	ldi	r26, 0x60	; 96
     186:	b0 e0       	ldi	r27, 0x00	; 0
     188:	e4 ef       	ldi	r30, 0xF4	; 244
     18a:	f3 e1       	ldi	r31, 0x13	; 19
     18c:	02 c0       	rjmp	.+4      	; 0x192 <__do_copy_data+0x10>
     18e:	05 90       	lpm	r0, Z+
     190:	0d 92       	st	X+, r0
     192:	a0 39       	cpi	r26, 0x90	; 144
     194:	b1 07       	cpc	r27, r17
     196:	d9 f7       	brne	.-10     	; 0x18e <__do_copy_data+0xc>

00000198 <__do_clear_bss>:
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	a0 e9       	ldi	r26, 0x90	; 144
     19c:	b0 e0       	ldi	r27, 0x00	; 0
     19e:	01 c0       	rjmp	.+2      	; 0x1a2 <.do_clear_bss_start>

000001a0 <.do_clear_bss_loop>:
     1a0:	1d 92       	st	X+, r1

000001a2 <.do_clear_bss_start>:
     1a2:	a3 3c       	cpi	r26, 0xC3	; 195
     1a4:	b2 07       	cpc	r27, r18
     1a6:	e1 f7       	brne	.-8      	; 0x1a0 <.do_clear_bss_loop>
     1a8:	0e 94 12 02 	call	0x424	; 0x424 <main>
     1ac:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <_exit>

000001b0 <__bad_interrupt>:
     1b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b4 <__vector_7>:
uint16_t values[MAX_VAL]; //tablica przechowywujaca osatanie 20 wynikow, bufor kolowy
volatile uint8_t ind=0; //indeks do tablicy wskazujacy na nastepna wartosc
volatile uint8_t full=0; //czy mamy komplet danych w tablicy


ISR(TIMER1_COMPA_vect) {
     1b4:	1f 92       	push	r1
     1b6:	0f 92       	push	r0
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	0f 92       	push	r0
     1bc:	11 24       	eor	r1, r1
     1be:	2f 93       	push	r18
     1c0:	3f 93       	push	r19
     1c2:	4f 93       	push	r20
     1c4:	5f 93       	push	r21
     1c6:	6f 93       	push	r22
     1c8:	7f 93       	push	r23
     1ca:	8f 93       	push	r24
     1cc:	9f 93       	push	r25
     1ce:	af 93       	push	r26
     1d0:	bf 93       	push	r27
     1d2:	ef 93       	push	r30
     1d4:	ff 93       	push	r31
	uint8_t tmp_val; //tymczasowa zmienna do odbierania danych
	SS_ENABLE();//wybieramy cs - komunikacja z przetwornikiem
     1d6:	c4 98       	cbi	0x18, 4	; 24
	SPI_MasterTransmit(0x01); //Start
     1d8:	81 e0       	ldi	r24, 0x01	; 1
     1da:	0e 94 0d 02 	call	0x41a	; 0x41a <SPI_MasterTransmit>
	tmp_val = SPI_MasterTransmit(0xa0); //SGL=1, MSBF=1, reszta=0
     1de:	80 ea       	ldi	r24, 0xA0	; 160
     1e0:	0e 94 0d 02 	call	0x41a	; 0x41a <SPI_MasterTransmit>
	value = ((tmp_val & 0x0f)<<8);
     1e4:	8f 70       	andi	r24, 0x0F	; 15
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	98 2f       	mov	r25, r24
     1ea:	88 27       	eor	r24, r24
     1ec:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <value+0x1>
     1f0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <value>
	tmp_val = SPI_MasterTransmit(0x00);
     1f4:	80 e0       	ldi	r24, 0x00	; 0
     1f6:	0e 94 0d 02 	call	0x41a	; 0x41a <SPI_MasterTransmit>
	value |= tmp_val;
     1fa:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <value>
     1fe:	30 91 bc 00 	lds	r19, 0x00BC	; 0x8000bc <value+0x1>
     202:	28 2b       	or	r18, r24
     204:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <value+0x1>
     208:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <value>
	SS_DISABLE();
     20c:	c4 9a       	sbi	0x18, 4	; 24
	ind%=MAX_VAL; //reszta z dzielenia, iterator
     20e:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <ind>
     212:	64 e1       	ldi	r22, 0x14	; 20
     214:	0e 94 17 08 	call	0x102e	; 0x102e <__udivmodqi4>
     218:	90 93 91 00 	sts	0x0091, r25	; 0x800091 <ind>
	values[ind++] = value;
     21c:	e0 91 91 00 	lds	r30, 0x0091	; 0x800091 <ind>
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	8e 0f       	add	r24, r30
     224:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <ind>
     228:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <value>
     22c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <value+0x1>
     230:	f0 e0       	ldi	r31, 0x00	; 0
     232:	ee 0f       	add	r30, r30
     234:	ff 1f       	adc	r31, r31
     236:	ee 56       	subi	r30, 0x6E	; 110
     238:	ff 4f       	sbci	r31, 0xFF	; 255
     23a:	91 83       	std	Z+1, r25	; 0x01
     23c:	80 83       	st	Z, r24
	if(ind==MAX_VAL) full=1;
     23e:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <ind>
     242:	84 31       	cpi	r24, 0x14	; 20
     244:	19 f4       	brne	.+6      	; 0x24c <__vector_7+0x98>
     246:	81 e0       	ldi	r24, 0x01	; 1
     248:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__data_end>
	value_change=1;
     24c:	81 e0       	ldi	r24, 0x01	; 1
     24e:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <value_change>
}
     252:	ff 91       	pop	r31
     254:	ef 91       	pop	r30
     256:	bf 91       	pop	r27
     258:	af 91       	pop	r26
     25a:	9f 91       	pop	r25
     25c:	8f 91       	pop	r24
     25e:	7f 91       	pop	r23
     260:	6f 91       	pop	r22
     262:	5f 91       	pop	r21
     264:	4f 91       	pop	r20
     266:	3f 91       	pop	r19
     268:	2f 91       	pop	r18
     26a:	0f 90       	pop	r0
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	0f 90       	pop	r0
     270:	1f 90       	pop	r1
     272:	18 95       	reti

00000274 <lcd_write_command>:
    lcd_clear();

}

void lcd_write_command(uint8_t data) {
    LCD_PORT &= ~(1<<LCD_RS);
     274:	da 98       	cbi	0x1b, 2	; 27
    LCD_PORT |= 1<<LCD_E;
     276:	db 9a       	sbi	0x1b, 3	; 27
    LCD_PORT = (LCD_PORT & 0x0f) | (data & 0xf0);
     278:	9b b3       	in	r25, 0x1b	; 27
     27a:	9f 70       	andi	r25, 0x0F	; 15
     27c:	28 2f       	mov	r18, r24
     27e:	20 7f       	andi	r18, 0xF0	; 240
     280:	92 2b       	or	r25, r18
     282:	9b bb       	out	0x1b, r25	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     284:	35 e0       	ldi	r19, 0x05	; 5
     286:	3a 95       	dec	r19
     288:	f1 f7       	brne	.-4      	; 0x286 <lcd_write_command+0x12>
     28a:	00 00       	nop
    _delay_us(1);
    LCD_PORT &= ~(1<<LCD_E);
     28c:	db 98       	cbi	0x1b, 3	; 27
     28e:	ef e8       	ldi	r30, 0x8F	; 143
     290:	f1 e0       	ldi	r31, 0x01	; 1
     292:	31 97       	sbiw	r30, 0x01	; 1
     294:	f1 f7       	brne	.-4      	; 0x292 <lcd_write_command+0x1e>
     296:	00 c0       	rjmp	.+0      	; 0x298 <lcd_write_command+0x24>
     298:	00 00       	nop
    _delay_us(100);
    LCD_PORT |= 1<<LCD_E;
     29a:	db 9a       	sbi	0x1b, 3	; 27
    LCD_PORT = (LCD_PORT & 0x0f) | ((data & 0x0f)<<4);
     29c:	2b b3       	in	r18, 0x1b	; 27
     29e:	2f 70       	andi	r18, 0x0F	; 15
     2a0:	f0 e1       	ldi	r31, 0x10	; 16
     2a2:	8f 9f       	mul	r24, r31
     2a4:	c0 01       	movw	r24, r0
     2a6:	11 24       	eor	r1, r1
     2a8:	82 2b       	or	r24, r18
     2aa:	8b bb       	out	0x1b, r24	; 27
     2ac:	35 e0       	ldi	r19, 0x05	; 5
     2ae:	3a 95       	dec	r19
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <lcd_write_command+0x3a>
     2b2:	00 00       	nop
    _delay_us(1);
    LCD_PORT &= ~(1<<LCD_E);
     2b4:	db 98       	cbi	0x1b, 3	; 27
     2b6:	8f e8       	ldi	r24, 0x8F	; 143
     2b8:	91 e0       	ldi	r25, 0x01	; 1
     2ba:	01 97       	sbiw	r24, 0x01	; 1
     2bc:	f1 f7       	brne	.-4      	; 0x2ba <lcd_write_command+0x46>
     2be:	00 c0       	rjmp	.+0      	; 0x2c0 <lcd_write_command+0x4c>
     2c0:	00 00       	nop
     2c2:	08 95       	ret

000002c4 <lcd_clear>:
    _delay_us(100);
}


void lcd_clear() {
    lcd_write_command(1);
     2c4:	81 e0       	ldi	r24, 0x01	; 1
     2c6:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_write_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2ca:	8f e3       	ldi	r24, 0x3F	; 63
     2cc:	9f e1       	ldi	r25, 0x1F	; 31
     2ce:	01 97       	sbiw	r24, 0x01	; 1
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <lcd_clear+0xa>
     2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <lcd_clear+0x10>
     2d4:	00 00       	nop
     2d6:	08 95       	ret

000002d8 <lcdinit>:
    lcd_write_data(c);
    return 0;
}

void lcdinit(void) {
    LCD_PORT_DIR = 0xff; //ustawiamy linie portu wyswietlacza na wyjsciowe
     2d8:	8f ef       	ldi	r24, 0xFF	; 255
     2da:	8a bb       	out	0x1a, r24	; 26
    LCD_PORT = 0x00; //ustawiamy stan niski na liniach portu wyswietlacza
     2dc:	1b ba       	out	0x1b, r1	; 27
     2de:	2f ef       	ldi	r18, 0xFF	; 255
     2e0:	80 e7       	ldi	r24, 0x70	; 112
     2e2:	92 e0       	ldi	r25, 0x02	; 2
     2e4:	21 50       	subi	r18, 0x01	; 1
     2e6:	80 40       	sbci	r24, 0x00	; 0
     2e8:	90 40       	sbci	r25, 0x00	; 0
     2ea:	e1 f7       	brne	.-8      	; 0x2e4 <lcdinit+0xc>
     2ec:	00 c0       	rjmp	.+0      	; 0x2ee <lcdinit+0x16>
     2ee:	00 00       	nop
    _delay_ms(50);

    stdout = &mystdout; //przypisujemy strumien wyjsciowy stdout
     2f0:	80 e6       	ldi	r24, 0x60	; 96
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	90 93 c0 00 	sts	0x00C0, r25	; 0x8000c0 <__iob+0x3>
     2f8:	80 93 bf 00 	sts	0x00BF, r24	; 0x8000bf <__iob+0x2>

    LCD_PORT &= ~(1<<LCD_RS); //wybieramy rejestr instrukcji IR
     2fc:	da 98       	cbi	0x1b, 2	; 27
     2fe:	93 e0       	ldi	r25, 0x03	; 3
    for (uint8_t i = 0; i < 3; i++) {
        LCD_PORT |= 1<<LCD_E;
     300:	db 9a       	sbi	0x1b, 3	; 27
        LCD_PORT = (LCD_PORT & 0x0f) | 0x30;
     302:	8b b3       	in	r24, 0x1b	; 27
     304:	8f 70       	andi	r24, 0x0F	; 15
     306:	80 63       	ori	r24, 0x30	; 48
     308:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     30a:	e5 e0       	ldi	r30, 0x05	; 5
     30c:	ea 95       	dec	r30
     30e:	f1 f7       	brne	.-4      	; 0x30c <lcdinit+0x34>
     310:	00 00       	nop
         _delay_us(1);
        LCD_PORT &= ~(1<<LCD_E);
     312:	db 98       	cbi	0x1b, 3	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     314:	ef e1       	ldi	r30, 0x1F	; 31
     316:	fe e4       	ldi	r31, 0x4E	; 78
     318:	31 97       	sbiw	r30, 0x01	; 1
     31a:	f1 f7       	brne	.-4      	; 0x318 <lcdinit+0x40>
     31c:	00 c0       	rjmp	.+0      	; 0x31e <lcdinit+0x46>
     31e:	00 00       	nop
     320:	91 50       	subi	r25, 0x01	; 1
    _delay_ms(50);

    stdout = &mystdout; //przypisujemy strumien wyjsciowy stdout

    LCD_PORT &= ~(1<<LCD_RS); //wybieramy rejestr instrukcji IR
    for (uint8_t i = 0; i < 3; i++) {
     322:	71 f7       	brne	.-36     	; 0x300 <lcdinit+0x28>
         _delay_us(1);
        LCD_PORT &= ~(1<<LCD_E);
        _delay_ms(5);
    }

    LCD_PORT |= 1<<LCD_E;
     324:	db 9a       	sbi	0x1b, 3	; 27
    LCD_PORT = (LCD_PORT & 0x0f) | 0x20;
     326:	8b b3       	in	r24, 0x1b	; 27
     328:	8f 70       	andi	r24, 0x0F	; 15
     32a:	80 62       	ori	r24, 0x20	; 32
     32c:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     32e:	f5 e0       	ldi	r31, 0x05	; 5
     330:	fa 95       	dec	r31
     332:	f1 f7       	brne	.-4      	; 0x330 <lcdinit+0x58>
     334:	00 00       	nop
    _delay_us(1);
    LCD_PORT &= ~(1<<LCD_E);
     336:	db 98       	cbi	0x1b, 3	; 27
     338:	8f e8       	ldi	r24, 0x8F	; 143
     33a:	91 e0       	ldi	r25, 0x01	; 1
     33c:	01 97       	sbiw	r24, 0x01	; 1
     33e:	f1 f7       	brne	.-4      	; 0x33c <lcdinit+0x64>
     340:	00 c0       	rjmp	.+0      	; 0x342 <lcdinit+0x6a>
     342:	00 00       	nop
    _delay_us(100);
    
    lcd_write_command(0x28);
     344:	88 e2       	ldi	r24, 0x28	; 40
     346:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_write_command>
    lcd_write_command(0x0c);
     34a:	8c e0       	ldi	r24, 0x0C	; 12
     34c:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_write_command>
    lcd_write_command(0x06);
     350:	86 e0       	ldi	r24, 0x06	; 6
     352:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_write_command>

    lcd_clear();
     356:	0c 94 62 01 	jmp	0x2c4	; 0x2c4 <lcd_clear>

0000035a <lcd_write_data>:
    lcd_write_command(1);
    _delay_ms(2);
}

void lcd_write_data(uint8_t data) {
    LCD_PORT |= (1<<LCD_RS);
     35a:	da 9a       	sbi	0x1b, 2	; 27
    LCD_PORT |= 1<<LCD_E;
     35c:	db 9a       	sbi	0x1b, 3	; 27
    LCD_PORT = (LCD_PORT & 0x0f) | (data & 0xf0);
     35e:	9b b3       	in	r25, 0x1b	; 27
     360:	9f 70       	andi	r25, 0x0F	; 15
     362:	28 2f       	mov	r18, r24
     364:	20 7f       	andi	r18, 0xF0	; 240
     366:	92 2b       	or	r25, r18
     368:	9b bb       	out	0x1b, r25	; 27
     36a:	35 e0       	ldi	r19, 0x05	; 5
     36c:	3a 95       	dec	r19
     36e:	f1 f7       	brne	.-4      	; 0x36c <lcd_write_data+0x12>
     370:	00 00       	nop
    _delay_us(1);
    LCD_PORT &= ~(1<<LCD_E);
     372:	db 98       	cbi	0x1b, 3	; 27
     374:	ef e8       	ldi	r30, 0x8F	; 143
     376:	f1 e0       	ldi	r31, 0x01	; 1
     378:	31 97       	sbiw	r30, 0x01	; 1
     37a:	f1 f7       	brne	.-4      	; 0x378 <lcd_write_data+0x1e>
     37c:	00 c0       	rjmp	.+0      	; 0x37e <lcd_write_data+0x24>
     37e:	00 00       	nop
    _delay_us(100);
    LCD_PORT |= 1<<LCD_E;
     380:	db 9a       	sbi	0x1b, 3	; 27
    LCD_PORT = (LCD_PORT & 0x0f) | ((data & 0x0f)<<4);
     382:	2b b3       	in	r18, 0x1b	; 27
     384:	2f 70       	andi	r18, 0x0F	; 15
     386:	f0 e1       	ldi	r31, 0x10	; 16
     388:	8f 9f       	mul	r24, r31
     38a:	c0 01       	movw	r24, r0
     38c:	11 24       	eor	r1, r1
     38e:	82 2b       	or	r24, r18
     390:	8b bb       	out	0x1b, r24	; 27
     392:	35 e0       	ldi	r19, 0x05	; 5
     394:	3a 95       	dec	r19
     396:	f1 f7       	brne	.-4      	; 0x394 <lcd_write_data+0x3a>
     398:	00 00       	nop
    _delay_us(1);
    LCD_PORT &= ~(1<<LCD_E);
     39a:	db 98       	cbi	0x1b, 3	; 27
     39c:	8f e8       	ldi	r24, 0x8F	; 143
     39e:	91 e0       	ldi	r25, 0x01	; 1
     3a0:	01 97       	sbiw	r24, 0x01	; 1
     3a2:	f1 f7       	brne	.-4      	; 0x3a0 <lcd_write_data+0x46>
     3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <lcd_write_data+0x4c>
     3a6:	00 00       	nop
     3a8:	08 95       	ret

000003aa <lcd_print>:
static int lcd_print(char c, FILE *stream);

static FILE mystdout = FDEV_SETUP_STREAM(lcd_print, NULL, _FDEV_SETUP_WRITE);

static int lcd_print(char c, FILE *stream) {
    lcd_write_data(c);
     3aa:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_write_data>
    return 0;
}
     3ae:	80 e0       	ldi	r24, 0x00	; 0
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	08 95       	ret

000003b4 <lcd_set_xy>:
    LCD_PORT &= ~(1<<LCD_E);
    _delay_us(100);
}

void lcd_set_xy(uint8_t x, uint8_t y) {
    lcd_write_command(0x80 | (0x40*y + x)); //instrukcja do utawienia adresu pamieci wyswietlacza linia "1" jets od adresu 0x40 wiec mamy adres 0x40*y+x
     3b4:	90 e4       	ldi	r25, 0x40	; 64
     3b6:	69 9f       	mul	r22, r25
     3b8:	80 0d       	add	r24, r0
     3ba:	11 24       	eor	r1, r1
     3bc:	80 68       	ori	r24, 0x80	; 128
     3be:	0c 94 3a 01 	jmp	0x274	; 0x274 <lcd_write_command>

000003c2 <lcd_write_text_xy>:
}

void lcd_write_text_xy(uint8_t x, uint8_t y, char *text) {
     3c2:	0f 93       	push	r16
     3c4:	1f 93       	push	r17
     3c6:	cf 93       	push	r28
     3c8:	df 93       	push	r29
     3ca:	8a 01       	movw	r16, r20
    lcd_set_xy(x, y);
     3cc:	0e 94 da 01 	call	0x3b4	; 0x3b4 <lcd_set_xy>
     3d0:	e8 01       	movw	r28, r16
    while(*text != 0) { 
     3d2:	89 91       	ld	r24, Y+
     3d4:	88 23       	and	r24, r24
     3d6:	19 f0       	breq	.+6      	; 0x3de <lcd_write_text_xy+0x1c>
		//sprawdz czy znak rozny od 0, jesli tak to wyslij znak na wyswietlacz, zwieksz wskaznik o 1 - na nastepny znak
        lcd_write_data((uint8_t)*text);
     3d8:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_write_data>
     3dc:	fa cf       	rjmp	.-12     	; 0x3d2 <lcd_write_text_xy+0x10>
        text++;
    }
}
     3de:	df 91       	pop	r29
     3e0:	cf 91       	pop	r28
     3e2:	1f 91       	pop	r17
     3e4:	0f 91       	pop	r16
     3e6:	08 95       	ret

000003e8 <lcd_write_text_P>:

void lcd_write_text_P(const char *text) {
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	fc 01       	movw	r30, r24
	register uint8_t ch;
	while( (ch = pgm_read_byte(text++) )) {
     3ee:	84 91       	lpm	r24, Z
     3f0:	ef 01       	movw	r28, r30
     3f2:	21 96       	adiw	r28, 0x01	; 1
     3f4:	88 23       	and	r24, r24
     3f6:	21 f0       	breq	.+8      	; 0x400 <__LOCK_REGION_LENGTH__>
		lcd_write_data(ch);
     3f8:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_write_data>
     3fc:	fe 01       	movw	r30, r28
     3fe:	f7 cf       	rjmp	.-18     	; 0x3ee <lcd_write_text_P+0x6>
	}
}
     400:	df 91       	pop	r29
     402:	cf 91       	pop	r28
     404:	08 95       	ret

00000406 <SPI_MasterInit>:
#include "spi.h"


void SPI_MasterInit(void) {
	DDRB|=(1<<SS)|(1<<MOSI)|(1<<SCK);
     406:	87 b3       	in	r24, 0x17	; 23
     408:	80 6b       	ori	r24, 0xB0	; 176
     40a:	87 bb       	out	0x17, r24	; 23
	PORTB|=(1<<SS);
     40c:	c4 9a       	sbi	0x18, 4	; 24
	DDRB&=~(MISO);
     40e:	87 b3       	in	r24, 0x17	; 23
     410:	89 7f       	andi	r24, 0xF9	; 249
     412:	87 bb       	out	0x17, r24	; 23
	SPCR=(1<<SPE)|(1<<MSTR)|(1<<SPR0);
     414:	81 e5       	ldi	r24, 0x51	; 81
     416:	8d b9       	out	0x0d, r24	; 13
     418:	08 95       	ret

0000041a <SPI_MasterTransmit>:
}

uint8_t SPI_MasterTransmit(uint8_t data) {
	SPDR = data;
     41a:	8f b9       	out	0x0f, r24	; 15
	while(! (SPSR & (1<<SPIF))); //SPIF=1 transmisja zakonczona
     41c:	77 9b       	sbis	0x0e, 7	; 14
     41e:	fe cf       	rjmp	.-4      	; 0x41c <SPI_MasterTransmit+0x2>
	return SPDR;
     420:	8f b1       	in	r24, 0x0f	; 15
}
     422:	08 95       	ret

00000424 <main>:
int main(void){
	double voltage;
	double voltage_mean = 0;
	
	lcdinit();
     424:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <lcdinit>
	lcd_write_text_P(PSTR("SPI A/D conv 2.1"));
     428:	85 e6       	ldi	r24, 0x65	; 101
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <lcd_write_text_P>
	lcd_set_xy(0,1);
     430:	61 e0       	ldi	r22, 0x01	; 1
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	0e 94 da 01 	call	0x3b4	; 0x3b4 <lcd_set_xy>
	lcd_write_text_P(PSTR("PSM.LABE.WF.PW"));
     438:	86 e5       	ldi	r24, 0x56	; 86
     43a:	91 e0       	ldi	r25, 0x01	; 1
     43c:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <lcd_write_text_P>
	SPI_MasterInit();
     440:	0e 94 03 02 	call	0x406	; 0x406 <SPI_MasterInit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     444:	2f ef       	ldi	r18, 0xFF	; 255
     446:	83 ed       	ldi	r24, 0xD3	; 211
     448:	90 e3       	ldi	r25, 0x30	; 48
     44a:	21 50       	subi	r18, 0x01	; 1
     44c:	80 40       	sbci	r24, 0x00	; 0
     44e:	90 40       	sbci	r25, 0x00	; 0
     450:	e1 f7       	brne	.-8      	; 0x44a <main+0x26>
     452:	00 c0       	rjmp	.+0      	; 0x454 <main+0x30>
     454:	00 00       	nop
	_delay_ms(1000);
	TCCR1B = (1<<WGM12) | (1<<CS11) | (1<<CS10);
     456:	8b e0       	ldi	r24, 0x0B	; 11
     458:	8e bd       	out	0x2e, r24	; 46
	OCR1A=14999;
     45a:	87 e9       	ldi	r24, 0x97	; 151
     45c:	9a e3       	ldi	r25, 0x3A	; 58
     45e:	9b bd       	out	0x2b, r25	; 43
     460:	8a bd       	out	0x2a, r24	; 42
	TIMSK=(1<<OCIE1A);
     462:	80 e1       	ldi	r24, 0x10	; 16
     464:	89 bf       	out	0x39, r24	; 57
	sei();
     466:	78 94       	sei
		if (value_change) {
			voltage = 5*value/4096.0;
			value_change=0;
			
			lcd_set_xy(0,0);
			printf("%d: %.3f V     ", value, voltage);
     468:	85 e0       	ldi	r24, 0x05	; 5
     46a:	98 2e       	mov	r9, r24
     46c:	9e e6       	ldi	r25, 0x6E	; 110
     46e:	e9 2e       	mov	r14, r25
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	f9 2e       	mov	r15, r25
     474:	2a eb       	ldi	r18, 0xBA	; 186
     476:	c2 2e       	mov	r12, r18
     478:	20 e0       	ldi	r18, 0x00	; 0
     47a:	d2 2e       	mov	r13, r18
			if(full) 
				voltage_mean = voltage/MAX_VAL;
			else
				voltage_mean = voltage/ind;
			lcd_set_xy(0,1);
			printf("Mean: %.3f V     ", voltage_mean);
     47c:	0e e7       	ldi	r16, 0x7E	; 126
     47e:	10 e0       	ldi	r17, 0x00	; 0
	TIMSK=(1<<OCIE1A);
	sei();
	
	
	while(1) {
		if (value_change) {
     480:	80 91 ba 00 	lds	r24, 0x00BA	; 0x8000ba <value_change>
     484:	88 23       	and	r24, r24
     486:	e1 f3       	breq	.-8      	; 0x480 <main+0x5c>
			voltage = 5*value/4096.0;
     488:	a0 90 bb 00 	lds	r10, 0x00BB	; 0x8000bb <value>
     48c:	b0 90 bc 00 	lds	r11, 0x00BC	; 0x8000bc <value+0x1>
			value_change=0;
     490:	10 92 ba 00 	sts	0x00BA, r1	; 0x8000ba <value_change>
			
			lcd_set_xy(0,0);
     494:	60 e0       	ldi	r22, 0x00	; 0
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	0e 94 da 01 	call	0x3b4	; 0x3b4 <lcd_set_xy>
			printf("%d: %.3f V     ", value, voltage);
     49c:	c0 91 bb 00 	lds	r28, 0x00BB	; 0x8000bb <value>
     4a0:	d0 91 bc 00 	lds	r29, 0x00BC	; 0x8000bc <value+0x1>
     4a4:	9a 9c       	mul	r9, r10
     4a6:	b0 01       	movw	r22, r0
     4a8:	9b 9c       	mul	r9, r11
     4aa:	70 0d       	add	r23, r0
     4ac:	11 24       	eor	r1, r1
     4ae:	80 e0       	ldi	r24, 0x00	; 0
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	0e 94 1c 07 	call	0xe38	; 0xe38 <__floatunsisf>
     4b6:	20 e0       	ldi	r18, 0x00	; 0
     4b8:	30 e0       	ldi	r19, 0x00	; 0
     4ba:	40 e8       	ldi	r20, 0x80	; 128
     4bc:	59 e3       	ldi	r21, 0x39	; 57
     4be:	0e 94 aa 07 	call	0xf54	; 0xf54 <__mulsf3>
     4c2:	9f 93       	push	r25
     4c4:	8f 93       	push	r24
     4c6:	7f 93       	push	r23
     4c8:	6f 93       	push	r22
     4ca:	df 93       	push	r29
     4cc:	cf 93       	push	r28
     4ce:	ff 92       	push	r15
     4d0:	ef 92       	push	r14
     4d2:	0e 94 84 09 	call	0x1308	; 0x1308 <printf>
     4d6:	c2 e9       	ldi	r28, 0x92	; 146
     4d8:	d0 e0       	ldi	r29, 0x00	; 0
     4da:	8d b7       	in	r24, 0x3d	; 61
     4dc:	9e b7       	in	r25, 0x3e	; 62
     4de:	08 96       	adiw	r24, 0x08	; 8
     4e0:	0f b6       	in	r0, 0x3f	; 63
     4e2:	f8 94       	cli
     4e4:	9e bf       	out	0x3e, r25	; 62
     4e6:	0f be       	out	0x3f, r0	; 63
     4e8:	8d bf       	out	0x3d, r24	; 61
			voltage = 0;
     4ea:	41 2c       	mov	r4, r1
     4ec:	51 2c       	mov	r5, r1
     4ee:	32 01       	movw	r6, r4
			
			for (register uint8_t i = 0; i < MAX_VAL; i++) {
				voltage += 5*values[i]/4096.0;
     4f0:	89 91       	ld	r24, Y+
     4f2:	99 91       	ld	r25, Y+
     4f4:	98 9e       	mul	r9, r24
     4f6:	b0 01       	movw	r22, r0
     4f8:	99 9e       	mul	r9, r25
     4fa:	70 0d       	add	r23, r0
     4fc:	11 24       	eor	r1, r1
     4fe:	80 e0       	ldi	r24, 0x00	; 0
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	0e 94 1c 07 	call	0xe38	; 0xe38 <__floatunsisf>
     506:	20 e0       	ldi	r18, 0x00	; 0
     508:	30 e0       	ldi	r19, 0x00	; 0
     50a:	40 e8       	ldi	r20, 0x80	; 128
     50c:	59 e3       	ldi	r21, 0x39	; 57
     50e:	0e 94 aa 07 	call	0xf54	; 0xf54 <__mulsf3>
     512:	9b 01       	movw	r18, r22
     514:	ac 01       	movw	r20, r24
     516:	c3 01       	movw	r24, r6
     518:	b2 01       	movw	r22, r4
     51a:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__addsf3>
     51e:	2b 01       	movw	r4, r22
     520:	3c 01       	movw	r6, r24
			
			lcd_set_xy(0,0);
			printf("%d: %.3f V     ", value, voltage);
			voltage = 0;
			
			for (register uint8_t i = 0; i < MAX_VAL; i++) {
     522:	cc 16       	cp	r12, r28
     524:	dd 06       	cpc	r13, r29
     526:	21 f7       	brne	.-56     	; 0x4f0 <main+0xcc>
				voltage += 5*values[i]/4096.0;
			}
			if(full) 
     528:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__data_end>
     52c:	88 23       	and	r24, r24
     52e:	29 f0       	breq	.+10     	; 0x53a <main+0x116>
				voltage_mean = voltage/MAX_VAL;
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	40 ea       	ldi	r20, 0xA0	; 160
     536:	51 e4       	ldi	r21, 0x41	; 65
     538:	09 c0       	rjmp	.+18     	; 0x54c <main+0x128>
			else
				voltage_mean = voltage/ind;
     53a:	60 91 91 00 	lds	r22, 0x0091	; 0x800091 <ind>
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__floatsisf>
     548:	9b 01       	movw	r18, r22
     54a:	ac 01       	movw	r20, r24
     54c:	c3 01       	movw	r24, r6
     54e:	b2 01       	movw	r22, r4
     550:	0e 94 aa 06 	call	0xd54	; 0xd54 <__divsf3>
     554:	eb 01       	movw	r28, r22
     556:	b8 2e       	mov	r11, r24
     558:	a9 2e       	mov	r10, r25
			lcd_set_xy(0,1);
     55a:	61 e0       	ldi	r22, 0x01	; 1
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	0e 94 da 01 	call	0x3b4	; 0x3b4 <lcd_set_xy>
			printf("Mean: %.3f V     ", voltage_mean);
     562:	af 92       	push	r10
     564:	bf 92       	push	r11
     566:	df 93       	push	r29
     568:	cf 93       	push	r28
     56a:	1f 93       	push	r17
     56c:	0f 93       	push	r16
     56e:	0e 94 84 09 	call	0x1308	; 0x1308 <printf>
     572:	0f 90       	pop	r0
     574:	0f 90       	pop	r0
     576:	0f 90       	pop	r0
     578:	0f 90       	pop	r0
     57a:	0f 90       	pop	r0
     57c:	0f 90       	pop	r0
     57e:	80 cf       	rjmp	.-256    	; 0x480 <main+0x5c>

00000580 <vfprintf>:
     580:	a0 e1       	ldi	r26, 0x10	; 16
     582:	b0 e0       	ldi	r27, 0x00	; 0
     584:	e6 ec       	ldi	r30, 0xC6	; 198
     586:	f2 e0       	ldi	r31, 0x02	; 2
     588:	0c 94 23 08 	jmp	0x1046	; 0x1046 <__prologue_saves__>
     58c:	7c 01       	movw	r14, r24
     58e:	1b 01       	movw	r2, r22
     590:	6a 01       	movw	r12, r20
     592:	fc 01       	movw	r30, r24
     594:	17 82       	std	Z+7, r1	; 0x07
     596:	16 82       	std	Z+6, r1	; 0x06
     598:	83 81       	ldd	r24, Z+3	; 0x03
     59a:	81 ff       	sbrs	r24, 1
     59c:	44 c3       	rjmp	.+1672   	; 0xc26 <__stack+0x3c7>
     59e:	9e 01       	movw	r18, r28
     5a0:	2f 5f       	subi	r18, 0xFF	; 255
     5a2:	3f 4f       	sbci	r19, 0xFF	; 255
     5a4:	39 01       	movw	r6, r18
     5a6:	f7 01       	movw	r30, r14
     5a8:	93 81       	ldd	r25, Z+3	; 0x03
     5aa:	f1 01       	movw	r30, r2
     5ac:	93 fd       	sbrc	r25, 3
     5ae:	85 91       	lpm	r24, Z+
     5b0:	93 ff       	sbrs	r25, 3
     5b2:	81 91       	ld	r24, Z+
     5b4:	1f 01       	movw	r2, r30
     5b6:	88 23       	and	r24, r24
     5b8:	09 f4       	brne	.+2      	; 0x5bc <vfprintf+0x3c>
     5ba:	31 c3       	rjmp	.+1634   	; 0xc1e <__stack+0x3bf>
     5bc:	85 32       	cpi	r24, 0x25	; 37
     5be:	39 f4       	brne	.+14     	; 0x5ce <vfprintf+0x4e>
     5c0:	93 fd       	sbrc	r25, 3
     5c2:	85 91       	lpm	r24, Z+
     5c4:	93 ff       	sbrs	r25, 3
     5c6:	81 91       	ld	r24, Z+
     5c8:	1f 01       	movw	r2, r30
     5ca:	85 32       	cpi	r24, 0x25	; 37
     5cc:	39 f4       	brne	.+14     	; 0x5dc <vfprintf+0x5c>
     5ce:	b7 01       	movw	r22, r14
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     5d6:	56 01       	movw	r10, r12
     5d8:	65 01       	movw	r12, r10
     5da:	e5 cf       	rjmp	.-54     	; 0x5a6 <vfprintf+0x26>
     5dc:	10 e0       	ldi	r17, 0x00	; 0
     5de:	51 2c       	mov	r5, r1
     5e0:	91 2c       	mov	r9, r1
     5e2:	ff e1       	ldi	r31, 0x1F	; 31
     5e4:	f9 15       	cp	r31, r9
     5e6:	d8 f0       	brcs	.+54     	; 0x61e <vfprintf+0x9e>
     5e8:	8b 32       	cpi	r24, 0x2B	; 43
     5ea:	79 f0       	breq	.+30     	; 0x60a <vfprintf+0x8a>
     5ec:	38 f4       	brcc	.+14     	; 0x5fc <vfprintf+0x7c>
     5ee:	80 32       	cpi	r24, 0x20	; 32
     5f0:	79 f0       	breq	.+30     	; 0x610 <vfprintf+0x90>
     5f2:	83 32       	cpi	r24, 0x23	; 35
     5f4:	a1 f4       	brne	.+40     	; 0x61e <vfprintf+0x9e>
     5f6:	f9 2d       	mov	r31, r9
     5f8:	f0 61       	ori	r31, 0x10	; 16
     5fa:	2e c0       	rjmp	.+92     	; 0x658 <vfprintf+0xd8>
     5fc:	8d 32       	cpi	r24, 0x2D	; 45
     5fe:	61 f0       	breq	.+24     	; 0x618 <vfprintf+0x98>
     600:	80 33       	cpi	r24, 0x30	; 48
     602:	69 f4       	brne	.+26     	; 0x61e <vfprintf+0x9e>
     604:	29 2d       	mov	r18, r9
     606:	21 60       	ori	r18, 0x01	; 1
     608:	2d c0       	rjmp	.+90     	; 0x664 <vfprintf+0xe4>
     60a:	39 2d       	mov	r19, r9
     60c:	32 60       	ori	r19, 0x02	; 2
     60e:	93 2e       	mov	r9, r19
     610:	89 2d       	mov	r24, r9
     612:	84 60       	ori	r24, 0x04	; 4
     614:	98 2e       	mov	r9, r24
     616:	2a c0       	rjmp	.+84     	; 0x66c <vfprintf+0xec>
     618:	e9 2d       	mov	r30, r9
     61a:	e8 60       	ori	r30, 0x08	; 8
     61c:	15 c0       	rjmp	.+42     	; 0x648 <vfprintf+0xc8>
     61e:	97 fc       	sbrc	r9, 7
     620:	2d c0       	rjmp	.+90     	; 0x67c <vfprintf+0xfc>
     622:	20 ed       	ldi	r18, 0xD0	; 208
     624:	28 0f       	add	r18, r24
     626:	2a 30       	cpi	r18, 0x0A	; 10
     628:	88 f4       	brcc	.+34     	; 0x64c <vfprintf+0xcc>
     62a:	96 fe       	sbrs	r9, 6
     62c:	06 c0       	rjmp	.+12     	; 0x63a <vfprintf+0xba>
     62e:	3a e0       	ldi	r19, 0x0A	; 10
     630:	13 9f       	mul	r17, r19
     632:	20 0d       	add	r18, r0
     634:	11 24       	eor	r1, r1
     636:	12 2f       	mov	r17, r18
     638:	19 c0       	rjmp	.+50     	; 0x66c <vfprintf+0xec>
     63a:	8a e0       	ldi	r24, 0x0A	; 10
     63c:	58 9e       	mul	r5, r24
     63e:	20 0d       	add	r18, r0
     640:	11 24       	eor	r1, r1
     642:	52 2e       	mov	r5, r18
     644:	e9 2d       	mov	r30, r9
     646:	e0 62       	ori	r30, 0x20	; 32
     648:	9e 2e       	mov	r9, r30
     64a:	10 c0       	rjmp	.+32     	; 0x66c <vfprintf+0xec>
     64c:	8e 32       	cpi	r24, 0x2E	; 46
     64e:	31 f4       	brne	.+12     	; 0x65c <vfprintf+0xdc>
     650:	96 fc       	sbrc	r9, 6
     652:	e5 c2       	rjmp	.+1482   	; 0xc1e <__stack+0x3bf>
     654:	f9 2d       	mov	r31, r9
     656:	f0 64       	ori	r31, 0x40	; 64
     658:	9f 2e       	mov	r9, r31
     65a:	08 c0       	rjmp	.+16     	; 0x66c <vfprintf+0xec>
     65c:	8c 36       	cpi	r24, 0x6C	; 108
     65e:	21 f4       	brne	.+8      	; 0x668 <vfprintf+0xe8>
     660:	29 2d       	mov	r18, r9
     662:	20 68       	ori	r18, 0x80	; 128
     664:	92 2e       	mov	r9, r18
     666:	02 c0       	rjmp	.+4      	; 0x66c <vfprintf+0xec>
     668:	88 36       	cpi	r24, 0x68	; 104
     66a:	41 f4       	brne	.+16     	; 0x67c <vfprintf+0xfc>
     66c:	f1 01       	movw	r30, r2
     66e:	93 fd       	sbrc	r25, 3
     670:	85 91       	lpm	r24, Z+
     672:	93 ff       	sbrs	r25, 3
     674:	81 91       	ld	r24, Z+
     676:	1f 01       	movw	r2, r30
     678:	81 11       	cpse	r24, r1
     67a:	b3 cf       	rjmp	.-154    	; 0x5e2 <vfprintf+0x62>
     67c:	9b eb       	ldi	r25, 0xBB	; 187
     67e:	98 0f       	add	r25, r24
     680:	93 30       	cpi	r25, 0x03	; 3
     682:	20 f4       	brcc	.+8      	; 0x68c <vfprintf+0x10c>
     684:	99 2d       	mov	r25, r9
     686:	90 61       	ori	r25, 0x10	; 16
     688:	80 5e       	subi	r24, 0xE0	; 224
     68a:	07 c0       	rjmp	.+14     	; 0x69a <vfprintf+0x11a>
     68c:	9b e9       	ldi	r25, 0x9B	; 155
     68e:	98 0f       	add	r25, r24
     690:	93 30       	cpi	r25, 0x03	; 3
     692:	08 f0       	brcs	.+2      	; 0x696 <vfprintf+0x116>
     694:	66 c1       	rjmp	.+716    	; 0x962 <__stack+0x103>
     696:	99 2d       	mov	r25, r9
     698:	9f 7e       	andi	r25, 0xEF	; 239
     69a:	96 ff       	sbrs	r25, 6
     69c:	16 e0       	ldi	r17, 0x06	; 6
     69e:	9f 73       	andi	r25, 0x3F	; 63
     6a0:	99 2e       	mov	r9, r25
     6a2:	85 36       	cpi	r24, 0x65	; 101
     6a4:	19 f4       	brne	.+6      	; 0x6ac <vfprintf+0x12c>
     6a6:	90 64       	ori	r25, 0x40	; 64
     6a8:	99 2e       	mov	r9, r25
     6aa:	08 c0       	rjmp	.+16     	; 0x6bc <vfprintf+0x13c>
     6ac:	86 36       	cpi	r24, 0x66	; 102
     6ae:	21 f4       	brne	.+8      	; 0x6b8 <vfprintf+0x138>
     6b0:	39 2f       	mov	r19, r25
     6b2:	30 68       	ori	r19, 0x80	; 128
     6b4:	93 2e       	mov	r9, r19
     6b6:	02 c0       	rjmp	.+4      	; 0x6bc <vfprintf+0x13c>
     6b8:	11 11       	cpse	r17, r1
     6ba:	11 50       	subi	r17, 0x01	; 1
     6bc:	97 fe       	sbrs	r9, 7
     6be:	07 c0       	rjmp	.+14     	; 0x6ce <vfprintf+0x14e>
     6c0:	1c 33       	cpi	r17, 0x3C	; 60
     6c2:	50 f4       	brcc	.+20     	; 0x6d8 <vfprintf+0x158>
     6c4:	44 24       	eor	r4, r4
     6c6:	43 94       	inc	r4
     6c8:	41 0e       	add	r4, r17
     6ca:	27 e0       	ldi	r18, 0x07	; 7
     6cc:	0b c0       	rjmp	.+22     	; 0x6e4 <vfprintf+0x164>
     6ce:	18 30       	cpi	r17, 0x08	; 8
     6d0:	38 f0       	brcs	.+14     	; 0x6e0 <vfprintf+0x160>
     6d2:	27 e0       	ldi	r18, 0x07	; 7
     6d4:	17 e0       	ldi	r17, 0x07	; 7
     6d6:	05 c0       	rjmp	.+10     	; 0x6e2 <vfprintf+0x162>
     6d8:	27 e0       	ldi	r18, 0x07	; 7
     6da:	9c e3       	ldi	r25, 0x3C	; 60
     6dc:	49 2e       	mov	r4, r25
     6de:	02 c0       	rjmp	.+4      	; 0x6e4 <vfprintf+0x164>
     6e0:	21 2f       	mov	r18, r17
     6e2:	41 2c       	mov	r4, r1
     6e4:	56 01       	movw	r10, r12
     6e6:	84 e0       	ldi	r24, 0x04	; 4
     6e8:	a8 0e       	add	r10, r24
     6ea:	b1 1c       	adc	r11, r1
     6ec:	f6 01       	movw	r30, r12
     6ee:	60 81       	ld	r22, Z
     6f0:	71 81       	ldd	r23, Z+1	; 0x01
     6f2:	82 81       	ldd	r24, Z+2	; 0x02
     6f4:	93 81       	ldd	r25, Z+3	; 0x03
     6f6:	04 2d       	mov	r16, r4
     6f8:	a3 01       	movw	r20, r6
     6fa:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <__ftoa_engine>
     6fe:	6c 01       	movw	r12, r24
     700:	f9 81       	ldd	r31, Y+1	; 0x01
     702:	fc 87       	std	Y+12, r31	; 0x0c
     704:	f0 ff       	sbrs	r31, 0
     706:	02 c0       	rjmp	.+4      	; 0x70c <vfprintf+0x18c>
     708:	f3 ff       	sbrs	r31, 3
     70a:	06 c0       	rjmp	.+12     	; 0x718 <vfprintf+0x198>
     70c:	91 fc       	sbrc	r9, 1
     70e:	06 c0       	rjmp	.+12     	; 0x71c <vfprintf+0x19c>
     710:	92 fe       	sbrs	r9, 2
     712:	06 c0       	rjmp	.+12     	; 0x720 <vfprintf+0x1a0>
     714:	00 e2       	ldi	r16, 0x20	; 32
     716:	05 c0       	rjmp	.+10     	; 0x722 <vfprintf+0x1a2>
     718:	0d e2       	ldi	r16, 0x2D	; 45
     71a:	03 c0       	rjmp	.+6      	; 0x722 <vfprintf+0x1a2>
     71c:	0b e2       	ldi	r16, 0x2B	; 43
     71e:	01 c0       	rjmp	.+2      	; 0x722 <vfprintf+0x1a2>
     720:	00 e0       	ldi	r16, 0x00	; 0
     722:	8c 85       	ldd	r24, Y+12	; 0x0c
     724:	8c 70       	andi	r24, 0x0C	; 12
     726:	19 f0       	breq	.+6      	; 0x72e <vfprintf+0x1ae>
     728:	01 11       	cpse	r16, r1
     72a:	5a c2       	rjmp	.+1204   	; 0xbe0 <__stack+0x381>
     72c:	9b c2       	rjmp	.+1334   	; 0xc64 <__stack+0x405>
     72e:	97 fe       	sbrs	r9, 7
     730:	10 c0       	rjmp	.+32     	; 0x752 <vfprintf+0x1d2>
     732:	4c 0c       	add	r4, r12
     734:	fc 85       	ldd	r31, Y+12	; 0x0c
     736:	f4 ff       	sbrs	r31, 4
     738:	04 c0       	rjmp	.+8      	; 0x742 <vfprintf+0x1c2>
     73a:	8a 81       	ldd	r24, Y+2	; 0x02
     73c:	81 33       	cpi	r24, 0x31	; 49
     73e:	09 f4       	brne	.+2      	; 0x742 <vfprintf+0x1c2>
     740:	4a 94       	dec	r4
     742:	14 14       	cp	r1, r4
     744:	74 f5       	brge	.+92     	; 0x7a2 <vfprintf+0x222>
     746:	28 e0       	ldi	r18, 0x08	; 8
     748:	24 15       	cp	r18, r4
     74a:	78 f5       	brcc	.+94     	; 0x7aa <vfprintf+0x22a>
     74c:	88 e0       	ldi	r24, 0x08	; 8
     74e:	48 2e       	mov	r4, r24
     750:	2c c0       	rjmp	.+88     	; 0x7aa <vfprintf+0x22a>
     752:	96 fc       	sbrc	r9, 6
     754:	2a c0       	rjmp	.+84     	; 0x7aa <vfprintf+0x22a>
     756:	81 2f       	mov	r24, r17
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	8c 15       	cp	r24, r12
     75c:	9d 05       	cpc	r25, r13
     75e:	9c f0       	brlt	.+38     	; 0x786 <vfprintf+0x206>
     760:	3c ef       	ldi	r19, 0xFC	; 252
     762:	c3 16       	cp	r12, r19
     764:	3f ef       	ldi	r19, 0xFF	; 255
     766:	d3 06       	cpc	r13, r19
     768:	74 f0       	brlt	.+28     	; 0x786 <vfprintf+0x206>
     76a:	89 2d       	mov	r24, r9
     76c:	80 68       	ori	r24, 0x80	; 128
     76e:	98 2e       	mov	r9, r24
     770:	0a c0       	rjmp	.+20     	; 0x786 <vfprintf+0x206>
     772:	e2 e0       	ldi	r30, 0x02	; 2
     774:	f0 e0       	ldi	r31, 0x00	; 0
     776:	ec 0f       	add	r30, r28
     778:	fd 1f       	adc	r31, r29
     77a:	e1 0f       	add	r30, r17
     77c:	f1 1d       	adc	r31, r1
     77e:	80 81       	ld	r24, Z
     780:	80 33       	cpi	r24, 0x30	; 48
     782:	19 f4       	brne	.+6      	; 0x78a <vfprintf+0x20a>
     784:	11 50       	subi	r17, 0x01	; 1
     786:	11 11       	cpse	r17, r1
     788:	f4 cf       	rjmp	.-24     	; 0x772 <vfprintf+0x1f2>
     78a:	97 fe       	sbrs	r9, 7
     78c:	0e c0       	rjmp	.+28     	; 0x7aa <vfprintf+0x22a>
     78e:	44 24       	eor	r4, r4
     790:	43 94       	inc	r4
     792:	41 0e       	add	r4, r17
     794:	81 2f       	mov	r24, r17
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	c8 16       	cp	r12, r24
     79a:	d9 06       	cpc	r13, r25
     79c:	2c f4       	brge	.+10     	; 0x7a8 <vfprintf+0x228>
     79e:	1c 19       	sub	r17, r12
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <vfprintf+0x22a>
     7a2:	44 24       	eor	r4, r4
     7a4:	43 94       	inc	r4
     7a6:	01 c0       	rjmp	.+2      	; 0x7aa <vfprintf+0x22a>
     7a8:	10 e0       	ldi	r17, 0x00	; 0
     7aa:	97 fe       	sbrs	r9, 7
     7ac:	06 c0       	rjmp	.+12     	; 0x7ba <vfprintf+0x23a>
     7ae:	1c 14       	cp	r1, r12
     7b0:	1d 04       	cpc	r1, r13
     7b2:	34 f4       	brge	.+12     	; 0x7c0 <vfprintf+0x240>
     7b4:	c6 01       	movw	r24, r12
     7b6:	01 96       	adiw	r24, 0x01	; 1
     7b8:	05 c0       	rjmp	.+10     	; 0x7c4 <vfprintf+0x244>
     7ba:	85 e0       	ldi	r24, 0x05	; 5
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	02 c0       	rjmp	.+4      	; 0x7c4 <vfprintf+0x244>
     7c0:	81 e0       	ldi	r24, 0x01	; 1
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	01 11       	cpse	r16, r1
     7c6:	01 96       	adiw	r24, 0x01	; 1
     7c8:	11 23       	and	r17, r17
     7ca:	31 f0       	breq	.+12     	; 0x7d8 <vfprintf+0x258>
     7cc:	21 2f       	mov	r18, r17
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	2f 5f       	subi	r18, 0xFF	; 255
     7d2:	3f 4f       	sbci	r19, 0xFF	; 255
     7d4:	82 0f       	add	r24, r18
     7d6:	93 1f       	adc	r25, r19
     7d8:	25 2d       	mov	r18, r5
     7da:	30 e0       	ldi	r19, 0x00	; 0
     7dc:	82 17       	cp	r24, r18
     7de:	93 07       	cpc	r25, r19
     7e0:	14 f4       	brge	.+4      	; 0x7e6 <vfprintf+0x266>
     7e2:	58 1a       	sub	r5, r24
     7e4:	01 c0       	rjmp	.+2      	; 0x7e8 <vfprintf+0x268>
     7e6:	51 2c       	mov	r5, r1
     7e8:	89 2d       	mov	r24, r9
     7ea:	89 70       	andi	r24, 0x09	; 9
     7ec:	49 f4       	brne	.+18     	; 0x800 <vfprintf+0x280>
     7ee:	55 20       	and	r5, r5
     7f0:	39 f0       	breq	.+14     	; 0x800 <vfprintf+0x280>
     7f2:	b7 01       	movw	r22, r14
     7f4:	80 e2       	ldi	r24, 0x20	; 32
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     7fc:	5a 94       	dec	r5
     7fe:	f7 cf       	rjmp	.-18     	; 0x7ee <vfprintf+0x26e>
     800:	00 23       	and	r16, r16
     802:	29 f0       	breq	.+10     	; 0x80e <vfprintf+0x28e>
     804:	b7 01       	movw	r22, r14
     806:	80 2f       	mov	r24, r16
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     80e:	93 fc       	sbrc	r9, 3
     810:	09 c0       	rjmp	.+18     	; 0x824 <vfprintf+0x2a4>
     812:	55 20       	and	r5, r5
     814:	39 f0       	breq	.+14     	; 0x824 <vfprintf+0x2a4>
     816:	b7 01       	movw	r22, r14
     818:	80 e3       	ldi	r24, 0x30	; 48
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     820:	5a 94       	dec	r5
     822:	f7 cf       	rjmp	.-18     	; 0x812 <vfprintf+0x292>
     824:	97 fe       	sbrs	r9, 7
     826:	4c c0       	rjmp	.+152    	; 0x8c0 <__stack+0x61>
     828:	46 01       	movw	r8, r12
     82a:	d7 fe       	sbrs	r13, 7
     82c:	02 c0       	rjmp	.+4      	; 0x832 <vfprintf+0x2b2>
     82e:	81 2c       	mov	r8, r1
     830:	91 2c       	mov	r9, r1
     832:	c6 01       	movw	r24, r12
     834:	88 19       	sub	r24, r8
     836:	99 09       	sbc	r25, r9
     838:	f3 01       	movw	r30, r6
     83a:	e8 0f       	add	r30, r24
     83c:	f9 1f       	adc	r31, r25
     83e:	fe 87       	std	Y+14, r31	; 0x0e
     840:	ed 87       	std	Y+13, r30	; 0x0d
     842:	96 01       	movw	r18, r12
     844:	24 19       	sub	r18, r4
     846:	31 09       	sbc	r19, r1
     848:	38 8b       	std	Y+16, r19	; 0x10
     84a:	2f 87       	std	Y+15, r18	; 0x0f
     84c:	01 2f       	mov	r16, r17
     84e:	10 e0       	ldi	r17, 0x00	; 0
     850:	11 95       	neg	r17
     852:	01 95       	neg	r16
     854:	11 09       	sbc	r17, r1
     856:	3f ef       	ldi	r19, 0xFF	; 255
     858:	83 16       	cp	r8, r19
     85a:	93 06       	cpc	r9, r19
     85c:	29 f4       	brne	.+10     	; 0x868 <__stack+0x9>
     85e:	b7 01       	movw	r22, r14
     860:	8e e2       	ldi	r24, 0x2E	; 46
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     868:	c8 14       	cp	r12, r8
     86a:	d9 04       	cpc	r13, r9
     86c:	4c f0       	brlt	.+18     	; 0x880 <__stack+0x21>
     86e:	8f 85       	ldd	r24, Y+15	; 0x0f
     870:	98 89       	ldd	r25, Y+16	; 0x10
     872:	88 15       	cp	r24, r8
     874:	99 05       	cpc	r25, r9
     876:	24 f4       	brge	.+8      	; 0x880 <__stack+0x21>
     878:	ed 85       	ldd	r30, Y+13	; 0x0d
     87a:	fe 85       	ldd	r31, Y+14	; 0x0e
     87c:	81 81       	ldd	r24, Z+1	; 0x01
     87e:	01 c0       	rjmp	.+2      	; 0x882 <__stack+0x23>
     880:	80 e3       	ldi	r24, 0x30	; 48
     882:	f1 e0       	ldi	r31, 0x01	; 1
     884:	8f 1a       	sub	r8, r31
     886:	91 08       	sbc	r9, r1
     888:	2d 85       	ldd	r18, Y+13	; 0x0d
     88a:	3e 85       	ldd	r19, Y+14	; 0x0e
     88c:	2f 5f       	subi	r18, 0xFF	; 255
     88e:	3f 4f       	sbci	r19, 0xFF	; 255
     890:	3e 87       	std	Y+14, r19	; 0x0e
     892:	2d 87       	std	Y+13, r18	; 0x0d
     894:	80 16       	cp	r8, r16
     896:	91 06       	cpc	r9, r17
     898:	2c f0       	brlt	.+10     	; 0x8a4 <__stack+0x45>
     89a:	b7 01       	movw	r22, r14
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     8a2:	d9 cf       	rjmp	.-78     	; 0x856 <vfprintf+0x2d6>
     8a4:	c8 14       	cp	r12, r8
     8a6:	d9 04       	cpc	r13, r9
     8a8:	41 f4       	brne	.+16     	; 0x8ba <__stack+0x5b>
     8aa:	9a 81       	ldd	r25, Y+2	; 0x02
     8ac:	96 33       	cpi	r25, 0x36	; 54
     8ae:	20 f4       	brcc	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	95 33       	cpi	r25, 0x35	; 53
     8b2:	19 f4       	brne	.+6      	; 0x8ba <__stack+0x5b>
     8b4:	3c 85       	ldd	r19, Y+12	; 0x0c
     8b6:	34 ff       	sbrs	r19, 4
     8b8:	81 e3       	ldi	r24, 0x31	; 49
     8ba:	b7 01       	movw	r22, r14
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	4e c0       	rjmp	.+156    	; 0x95c <__stack+0xfd>
     8c0:	8a 81       	ldd	r24, Y+2	; 0x02
     8c2:	81 33       	cpi	r24, 0x31	; 49
     8c4:	19 f0       	breq	.+6      	; 0x8cc <__stack+0x6d>
     8c6:	9c 85       	ldd	r25, Y+12	; 0x0c
     8c8:	9f 7e       	andi	r25, 0xEF	; 239
     8ca:	9c 87       	std	Y+12, r25	; 0x0c
     8cc:	b7 01       	movw	r22, r14
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     8d4:	11 11       	cpse	r17, r1
     8d6:	05 c0       	rjmp	.+10     	; 0x8e2 <__stack+0x83>
     8d8:	94 fc       	sbrc	r9, 4
     8da:	18 c0       	rjmp	.+48     	; 0x90c <__stack+0xad>
     8dc:	85 e6       	ldi	r24, 0x65	; 101
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	17 c0       	rjmp	.+46     	; 0x910 <__stack+0xb1>
     8e2:	b7 01       	movw	r22, r14
     8e4:	8e e2       	ldi	r24, 0x2E	; 46
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     8ec:	1e 5f       	subi	r17, 0xFE	; 254
     8ee:	82 e0       	ldi	r24, 0x02	; 2
     8f0:	01 e0       	ldi	r16, 0x01	; 1
     8f2:	08 0f       	add	r16, r24
     8f4:	f3 01       	movw	r30, r6
     8f6:	e8 0f       	add	r30, r24
     8f8:	f1 1d       	adc	r31, r1
     8fa:	80 81       	ld	r24, Z
     8fc:	b7 01       	movw	r22, r14
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     904:	80 2f       	mov	r24, r16
     906:	01 13       	cpse	r16, r17
     908:	f3 cf       	rjmp	.-26     	; 0x8f0 <__stack+0x91>
     90a:	e6 cf       	rjmp	.-52     	; 0x8d8 <__stack+0x79>
     90c:	85 e4       	ldi	r24, 0x45	; 69
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	b7 01       	movw	r22, r14
     912:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     916:	d7 fc       	sbrc	r13, 7
     918:	06 c0       	rjmp	.+12     	; 0x926 <__stack+0xc7>
     91a:	c1 14       	cp	r12, r1
     91c:	d1 04       	cpc	r13, r1
     91e:	41 f4       	brne	.+16     	; 0x930 <__stack+0xd1>
     920:	ec 85       	ldd	r30, Y+12	; 0x0c
     922:	e4 ff       	sbrs	r30, 4
     924:	05 c0       	rjmp	.+10     	; 0x930 <__stack+0xd1>
     926:	d1 94       	neg	r13
     928:	c1 94       	neg	r12
     92a:	d1 08       	sbc	r13, r1
     92c:	8d e2       	ldi	r24, 0x2D	; 45
     92e:	01 c0       	rjmp	.+2      	; 0x932 <__stack+0xd3>
     930:	8b e2       	ldi	r24, 0x2B	; 43
     932:	b7 01       	movw	r22, r14
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     93a:	80 e3       	ldi	r24, 0x30	; 48
     93c:	2a e0       	ldi	r18, 0x0A	; 10
     93e:	c2 16       	cp	r12, r18
     940:	d1 04       	cpc	r13, r1
     942:	2c f0       	brlt	.+10     	; 0x94e <__stack+0xef>
     944:	8f 5f       	subi	r24, 0xFF	; 255
     946:	fa e0       	ldi	r31, 0x0A	; 10
     948:	cf 1a       	sub	r12, r31
     94a:	d1 08       	sbc	r13, r1
     94c:	f7 cf       	rjmp	.-18     	; 0x93c <__stack+0xdd>
     94e:	b7 01       	movw	r22, r14
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     956:	b7 01       	movw	r22, r14
     958:	c6 01       	movw	r24, r12
     95a:	c0 96       	adiw	r24, 0x30	; 48
     95c:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     960:	54 c1       	rjmp	.+680    	; 0xc0a <__stack+0x3ab>
     962:	83 36       	cpi	r24, 0x63	; 99
     964:	31 f0       	breq	.+12     	; 0x972 <__stack+0x113>
     966:	83 37       	cpi	r24, 0x73	; 115
     968:	79 f0       	breq	.+30     	; 0x988 <__stack+0x129>
     96a:	83 35       	cpi	r24, 0x53	; 83
     96c:	09 f0       	breq	.+2      	; 0x970 <__stack+0x111>
     96e:	56 c0       	rjmp	.+172    	; 0xa1c <__stack+0x1bd>
     970:	20 c0       	rjmp	.+64     	; 0x9b2 <__stack+0x153>
     972:	56 01       	movw	r10, r12
     974:	32 e0       	ldi	r19, 0x02	; 2
     976:	a3 0e       	add	r10, r19
     978:	b1 1c       	adc	r11, r1
     97a:	f6 01       	movw	r30, r12
     97c:	80 81       	ld	r24, Z
     97e:	89 83       	std	Y+1, r24	; 0x01
     980:	01 e0       	ldi	r16, 0x01	; 1
     982:	10 e0       	ldi	r17, 0x00	; 0
     984:	63 01       	movw	r12, r6
     986:	12 c0       	rjmp	.+36     	; 0x9ac <__stack+0x14d>
     988:	56 01       	movw	r10, r12
     98a:	f2 e0       	ldi	r31, 0x02	; 2
     98c:	af 0e       	add	r10, r31
     98e:	b1 1c       	adc	r11, r1
     990:	f6 01       	movw	r30, r12
     992:	c0 80       	ld	r12, Z
     994:	d1 80       	ldd	r13, Z+1	; 0x01
     996:	96 fe       	sbrs	r9, 6
     998:	03 c0       	rjmp	.+6      	; 0x9a0 <__stack+0x141>
     99a:	61 2f       	mov	r22, r17
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	02 c0       	rjmp	.+4      	; 0x9a4 <__stack+0x145>
     9a0:	6f ef       	ldi	r22, 0xFF	; 255
     9a2:	7f ef       	ldi	r23, 0xFF	; 255
     9a4:	c6 01       	movw	r24, r12
     9a6:	0e 94 3d 09 	call	0x127a	; 0x127a <strnlen>
     9aa:	8c 01       	movw	r16, r24
     9ac:	f9 2d       	mov	r31, r9
     9ae:	ff 77       	andi	r31, 0x7F	; 127
     9b0:	14 c0       	rjmp	.+40     	; 0x9da <__stack+0x17b>
     9b2:	56 01       	movw	r10, r12
     9b4:	22 e0       	ldi	r18, 0x02	; 2
     9b6:	a2 0e       	add	r10, r18
     9b8:	b1 1c       	adc	r11, r1
     9ba:	f6 01       	movw	r30, r12
     9bc:	c0 80       	ld	r12, Z
     9be:	d1 80       	ldd	r13, Z+1	; 0x01
     9c0:	96 fe       	sbrs	r9, 6
     9c2:	03 c0       	rjmp	.+6      	; 0x9ca <__stack+0x16b>
     9c4:	61 2f       	mov	r22, r17
     9c6:	70 e0       	ldi	r23, 0x00	; 0
     9c8:	02 c0       	rjmp	.+4      	; 0x9ce <__stack+0x16f>
     9ca:	6f ef       	ldi	r22, 0xFF	; 255
     9cc:	7f ef       	ldi	r23, 0xFF	; 255
     9ce:	c6 01       	movw	r24, r12
     9d0:	0e 94 32 09 	call	0x1264	; 0x1264 <strnlen_P>
     9d4:	8c 01       	movw	r16, r24
     9d6:	f9 2d       	mov	r31, r9
     9d8:	f0 68       	ori	r31, 0x80	; 128
     9da:	9f 2e       	mov	r9, r31
     9dc:	f3 fd       	sbrc	r31, 3
     9de:	1a c0       	rjmp	.+52     	; 0xa14 <__stack+0x1b5>
     9e0:	85 2d       	mov	r24, r5
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	08 17       	cp	r16, r24
     9e6:	19 07       	cpc	r17, r25
     9e8:	a8 f4       	brcc	.+42     	; 0xa14 <__stack+0x1b5>
     9ea:	b7 01       	movw	r22, r14
     9ec:	80 e2       	ldi	r24, 0x20	; 32
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     9f4:	5a 94       	dec	r5
     9f6:	f4 cf       	rjmp	.-24     	; 0x9e0 <__stack+0x181>
     9f8:	f6 01       	movw	r30, r12
     9fa:	97 fc       	sbrc	r9, 7
     9fc:	85 91       	lpm	r24, Z+
     9fe:	97 fe       	sbrs	r9, 7
     a00:	81 91       	ld	r24, Z+
     a02:	6f 01       	movw	r12, r30
     a04:	b7 01       	movw	r22, r14
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     a0c:	51 10       	cpse	r5, r1
     a0e:	5a 94       	dec	r5
     a10:	01 50       	subi	r16, 0x01	; 1
     a12:	11 09       	sbc	r17, r1
     a14:	01 15       	cp	r16, r1
     a16:	11 05       	cpc	r17, r1
     a18:	79 f7       	brne	.-34     	; 0x9f8 <__stack+0x199>
     a1a:	f7 c0       	rjmp	.+494    	; 0xc0a <__stack+0x3ab>
     a1c:	84 36       	cpi	r24, 0x64	; 100
     a1e:	11 f0       	breq	.+4      	; 0xa24 <__stack+0x1c5>
     a20:	89 36       	cpi	r24, 0x69	; 105
     a22:	61 f5       	brne	.+88     	; 0xa7c <__stack+0x21d>
     a24:	56 01       	movw	r10, r12
     a26:	97 fe       	sbrs	r9, 7
     a28:	09 c0       	rjmp	.+18     	; 0xa3c <__stack+0x1dd>
     a2a:	24 e0       	ldi	r18, 0x04	; 4
     a2c:	a2 0e       	add	r10, r18
     a2e:	b1 1c       	adc	r11, r1
     a30:	f6 01       	movw	r30, r12
     a32:	60 81       	ld	r22, Z
     a34:	71 81       	ldd	r23, Z+1	; 0x01
     a36:	82 81       	ldd	r24, Z+2	; 0x02
     a38:	93 81       	ldd	r25, Z+3	; 0x03
     a3a:	0a c0       	rjmp	.+20     	; 0xa50 <__stack+0x1f1>
     a3c:	f2 e0       	ldi	r31, 0x02	; 2
     a3e:	af 0e       	add	r10, r31
     a40:	b1 1c       	adc	r11, r1
     a42:	f6 01       	movw	r30, r12
     a44:	60 81       	ld	r22, Z
     a46:	71 81       	ldd	r23, Z+1	; 0x01
     a48:	07 2e       	mov	r0, r23
     a4a:	00 0c       	add	r0, r0
     a4c:	88 0b       	sbc	r24, r24
     a4e:	99 0b       	sbc	r25, r25
     a50:	f9 2d       	mov	r31, r9
     a52:	ff 76       	andi	r31, 0x6F	; 111
     a54:	9f 2e       	mov	r9, r31
     a56:	97 ff       	sbrs	r25, 7
     a58:	09 c0       	rjmp	.+18     	; 0xa6c <__stack+0x20d>
     a5a:	90 95       	com	r25
     a5c:	80 95       	com	r24
     a5e:	70 95       	com	r23
     a60:	61 95       	neg	r22
     a62:	7f 4f       	sbci	r23, 0xFF	; 255
     a64:	8f 4f       	sbci	r24, 0xFF	; 255
     a66:	9f 4f       	sbci	r25, 0xFF	; 255
     a68:	f0 68       	ori	r31, 0x80	; 128
     a6a:	9f 2e       	mov	r9, r31
     a6c:	2a e0       	ldi	r18, 0x0A	; 10
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	a3 01       	movw	r20, r6
     a72:	0e 94 9a 09 	call	0x1334	; 0x1334 <__ultoa_invert>
     a76:	c8 2e       	mov	r12, r24
     a78:	c6 18       	sub	r12, r6
     a7a:	3f c0       	rjmp	.+126    	; 0xafa <__stack+0x29b>
     a7c:	09 2d       	mov	r16, r9
     a7e:	85 37       	cpi	r24, 0x75	; 117
     a80:	21 f4       	brne	.+8      	; 0xa8a <__stack+0x22b>
     a82:	0f 7e       	andi	r16, 0xEF	; 239
     a84:	2a e0       	ldi	r18, 0x0A	; 10
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	1d c0       	rjmp	.+58     	; 0xac4 <__stack+0x265>
     a8a:	09 7f       	andi	r16, 0xF9	; 249
     a8c:	8f 36       	cpi	r24, 0x6F	; 111
     a8e:	91 f0       	breq	.+36     	; 0xab4 <__stack+0x255>
     a90:	18 f4       	brcc	.+6      	; 0xa98 <__stack+0x239>
     a92:	88 35       	cpi	r24, 0x58	; 88
     a94:	59 f0       	breq	.+22     	; 0xaac <__stack+0x24d>
     a96:	c3 c0       	rjmp	.+390    	; 0xc1e <__stack+0x3bf>
     a98:	80 37       	cpi	r24, 0x70	; 112
     a9a:	19 f0       	breq	.+6      	; 0xaa2 <__stack+0x243>
     a9c:	88 37       	cpi	r24, 0x78	; 120
     a9e:	11 f0       	breq	.+4      	; 0xaa4 <__stack+0x245>
     aa0:	be c0       	rjmp	.+380    	; 0xc1e <__stack+0x3bf>
     aa2:	00 61       	ori	r16, 0x10	; 16
     aa4:	04 ff       	sbrs	r16, 4
     aa6:	09 c0       	rjmp	.+18     	; 0xaba <__stack+0x25b>
     aa8:	04 60       	ori	r16, 0x04	; 4
     aaa:	07 c0       	rjmp	.+14     	; 0xaba <__stack+0x25b>
     aac:	94 fe       	sbrs	r9, 4
     aae:	08 c0       	rjmp	.+16     	; 0xac0 <__stack+0x261>
     ab0:	06 60       	ori	r16, 0x06	; 6
     ab2:	06 c0       	rjmp	.+12     	; 0xac0 <__stack+0x261>
     ab4:	28 e0       	ldi	r18, 0x08	; 8
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	05 c0       	rjmp	.+10     	; 0xac4 <__stack+0x265>
     aba:	20 e1       	ldi	r18, 0x10	; 16
     abc:	30 e0       	ldi	r19, 0x00	; 0
     abe:	02 c0       	rjmp	.+4      	; 0xac4 <__stack+0x265>
     ac0:	20 e1       	ldi	r18, 0x10	; 16
     ac2:	32 e0       	ldi	r19, 0x02	; 2
     ac4:	56 01       	movw	r10, r12
     ac6:	07 ff       	sbrs	r16, 7
     ac8:	09 c0       	rjmp	.+18     	; 0xadc <__stack+0x27d>
     aca:	84 e0       	ldi	r24, 0x04	; 4
     acc:	a8 0e       	add	r10, r24
     ace:	b1 1c       	adc	r11, r1
     ad0:	f6 01       	movw	r30, r12
     ad2:	60 81       	ld	r22, Z
     ad4:	71 81       	ldd	r23, Z+1	; 0x01
     ad6:	82 81       	ldd	r24, Z+2	; 0x02
     ad8:	93 81       	ldd	r25, Z+3	; 0x03
     ada:	08 c0       	rjmp	.+16     	; 0xaec <__stack+0x28d>
     adc:	f2 e0       	ldi	r31, 0x02	; 2
     ade:	af 0e       	add	r10, r31
     ae0:	b1 1c       	adc	r11, r1
     ae2:	f6 01       	movw	r30, r12
     ae4:	60 81       	ld	r22, Z
     ae6:	71 81       	ldd	r23, Z+1	; 0x01
     ae8:	80 e0       	ldi	r24, 0x00	; 0
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	a3 01       	movw	r20, r6
     aee:	0e 94 9a 09 	call	0x1334	; 0x1334 <__ultoa_invert>
     af2:	c8 2e       	mov	r12, r24
     af4:	c6 18       	sub	r12, r6
     af6:	0f 77       	andi	r16, 0x7F	; 127
     af8:	90 2e       	mov	r9, r16
     afa:	96 fe       	sbrs	r9, 6
     afc:	0b c0       	rjmp	.+22     	; 0xb14 <__stack+0x2b5>
     afe:	09 2d       	mov	r16, r9
     b00:	0e 7f       	andi	r16, 0xFE	; 254
     b02:	c1 16       	cp	r12, r17
     b04:	50 f4       	brcc	.+20     	; 0xb1a <__stack+0x2bb>
     b06:	94 fe       	sbrs	r9, 4
     b08:	0a c0       	rjmp	.+20     	; 0xb1e <__stack+0x2bf>
     b0a:	92 fc       	sbrc	r9, 2
     b0c:	08 c0       	rjmp	.+16     	; 0xb1e <__stack+0x2bf>
     b0e:	09 2d       	mov	r16, r9
     b10:	0e 7e       	andi	r16, 0xEE	; 238
     b12:	05 c0       	rjmp	.+10     	; 0xb1e <__stack+0x2bf>
     b14:	dc 2c       	mov	r13, r12
     b16:	09 2d       	mov	r16, r9
     b18:	03 c0       	rjmp	.+6      	; 0xb20 <__stack+0x2c1>
     b1a:	dc 2c       	mov	r13, r12
     b1c:	01 c0       	rjmp	.+2      	; 0xb20 <__stack+0x2c1>
     b1e:	d1 2e       	mov	r13, r17
     b20:	04 ff       	sbrs	r16, 4
     b22:	0d c0       	rjmp	.+26     	; 0xb3e <__stack+0x2df>
     b24:	fe 01       	movw	r30, r28
     b26:	ec 0d       	add	r30, r12
     b28:	f1 1d       	adc	r31, r1
     b2a:	80 81       	ld	r24, Z
     b2c:	80 33       	cpi	r24, 0x30	; 48
     b2e:	11 f4       	brne	.+4      	; 0xb34 <__stack+0x2d5>
     b30:	09 7e       	andi	r16, 0xE9	; 233
     b32:	09 c0       	rjmp	.+18     	; 0xb46 <__stack+0x2e7>
     b34:	02 ff       	sbrs	r16, 2
     b36:	06 c0       	rjmp	.+12     	; 0xb44 <__stack+0x2e5>
     b38:	d3 94       	inc	r13
     b3a:	d3 94       	inc	r13
     b3c:	04 c0       	rjmp	.+8      	; 0xb46 <__stack+0x2e7>
     b3e:	80 2f       	mov	r24, r16
     b40:	86 78       	andi	r24, 0x86	; 134
     b42:	09 f0       	breq	.+2      	; 0xb46 <__stack+0x2e7>
     b44:	d3 94       	inc	r13
     b46:	03 fd       	sbrc	r16, 3
     b48:	11 c0       	rjmp	.+34     	; 0xb6c <__stack+0x30d>
     b4a:	00 ff       	sbrs	r16, 0
     b4c:	06 c0       	rjmp	.+12     	; 0xb5a <__stack+0x2fb>
     b4e:	1c 2d       	mov	r17, r12
     b50:	d5 14       	cp	r13, r5
     b52:	80 f4       	brcc	.+32     	; 0xb74 <__stack+0x315>
     b54:	15 0d       	add	r17, r5
     b56:	1d 19       	sub	r17, r13
     b58:	0d c0       	rjmp	.+26     	; 0xb74 <__stack+0x315>
     b5a:	d5 14       	cp	r13, r5
     b5c:	58 f4       	brcc	.+22     	; 0xb74 <__stack+0x315>
     b5e:	b7 01       	movw	r22, r14
     b60:	80 e2       	ldi	r24, 0x20	; 32
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     b68:	d3 94       	inc	r13
     b6a:	f7 cf       	rjmp	.-18     	; 0xb5a <__stack+0x2fb>
     b6c:	d5 14       	cp	r13, r5
     b6e:	10 f4       	brcc	.+4      	; 0xb74 <__stack+0x315>
     b70:	5d 18       	sub	r5, r13
     b72:	01 c0       	rjmp	.+2      	; 0xb76 <__stack+0x317>
     b74:	51 2c       	mov	r5, r1
     b76:	04 ff       	sbrs	r16, 4
     b78:	10 c0       	rjmp	.+32     	; 0xb9a <__stack+0x33b>
     b7a:	b7 01       	movw	r22, r14
     b7c:	80 e3       	ldi	r24, 0x30	; 48
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     b84:	02 ff       	sbrs	r16, 2
     b86:	17 c0       	rjmp	.+46     	; 0xbb6 <__stack+0x357>
     b88:	01 fd       	sbrc	r16, 1
     b8a:	03 c0       	rjmp	.+6      	; 0xb92 <__stack+0x333>
     b8c:	88 e7       	ldi	r24, 0x78	; 120
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	02 c0       	rjmp	.+4      	; 0xb96 <__stack+0x337>
     b92:	88 e5       	ldi	r24, 0x58	; 88
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	b7 01       	movw	r22, r14
     b98:	0c c0       	rjmp	.+24     	; 0xbb2 <__stack+0x353>
     b9a:	80 2f       	mov	r24, r16
     b9c:	86 78       	andi	r24, 0x86	; 134
     b9e:	59 f0       	breq	.+22     	; 0xbb6 <__stack+0x357>
     ba0:	01 ff       	sbrs	r16, 1
     ba2:	02 c0       	rjmp	.+4      	; 0xba8 <__stack+0x349>
     ba4:	8b e2       	ldi	r24, 0x2B	; 43
     ba6:	01 c0       	rjmp	.+2      	; 0xbaa <__stack+0x34b>
     ba8:	80 e2       	ldi	r24, 0x20	; 32
     baa:	07 fd       	sbrc	r16, 7
     bac:	8d e2       	ldi	r24, 0x2D	; 45
     bae:	b7 01       	movw	r22, r14
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     bb6:	c1 16       	cp	r12, r17
     bb8:	38 f4       	brcc	.+14     	; 0xbc8 <__stack+0x369>
     bba:	b7 01       	movw	r22, r14
     bbc:	80 e3       	ldi	r24, 0x30	; 48
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     bc4:	11 50       	subi	r17, 0x01	; 1
     bc6:	f7 cf       	rjmp	.-18     	; 0xbb6 <__stack+0x357>
     bc8:	ca 94       	dec	r12
     bca:	f3 01       	movw	r30, r6
     bcc:	ec 0d       	add	r30, r12
     bce:	f1 1d       	adc	r31, r1
     bd0:	80 81       	ld	r24, Z
     bd2:	b7 01       	movw	r22, r14
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     bda:	c1 10       	cpse	r12, r1
     bdc:	f5 cf       	rjmp	.-22     	; 0xbc8 <__stack+0x369>
     bde:	15 c0       	rjmp	.+42     	; 0xc0a <__stack+0x3ab>
     be0:	f4 e0       	ldi	r31, 0x04	; 4
     be2:	f5 15       	cp	r31, r5
     be4:	60 f5       	brcc	.+88     	; 0xc3e <__stack+0x3df>
     be6:	84 e0       	ldi	r24, 0x04	; 4
     be8:	58 1a       	sub	r5, r24
     bea:	93 fe       	sbrs	r9, 3
     bec:	1f c0       	rjmp	.+62     	; 0xc2c <__stack+0x3cd>
     bee:	01 11       	cpse	r16, r1
     bf0:	27 c0       	rjmp	.+78     	; 0xc40 <__stack+0x3e1>
     bf2:	2c 85       	ldd	r18, Y+12	; 0x0c
     bf4:	23 ff       	sbrs	r18, 3
     bf6:	2a c0       	rjmp	.+84     	; 0xc4c <__stack+0x3ed>
     bf8:	04 e5       	ldi	r16, 0x54	; 84
     bfa:	10 e0       	ldi	r17, 0x00	; 0
     bfc:	39 2d       	mov	r19, r9
     bfe:	30 71       	andi	r19, 0x10	; 16
     c00:	93 2e       	mov	r9, r19
     c02:	f8 01       	movw	r30, r16
     c04:	84 91       	lpm	r24, Z
     c06:	81 11       	cpse	r24, r1
     c08:	24 c0       	rjmp	.+72     	; 0xc52 <__stack+0x3f3>
     c0a:	55 20       	and	r5, r5
     c0c:	09 f4       	brne	.+2      	; 0xc10 <__stack+0x3b1>
     c0e:	e4 cc       	rjmp	.-1592   	; 0x5d8 <vfprintf+0x58>
     c10:	b7 01       	movw	r22, r14
     c12:	80 e2       	ldi	r24, 0x20	; 32
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     c1a:	5a 94       	dec	r5
     c1c:	f6 cf       	rjmp	.-20     	; 0xc0a <__stack+0x3ab>
     c1e:	f7 01       	movw	r30, r14
     c20:	86 81       	ldd	r24, Z+6	; 0x06
     c22:	97 81       	ldd	r25, Z+7	; 0x07
     c24:	26 c0       	rjmp	.+76     	; 0xc72 <__stack+0x413>
     c26:	8f ef       	ldi	r24, 0xFF	; 255
     c28:	9f ef       	ldi	r25, 0xFF	; 255
     c2a:	23 c0       	rjmp	.+70     	; 0xc72 <__stack+0x413>
     c2c:	b7 01       	movw	r22, r14
     c2e:	80 e2       	ldi	r24, 0x20	; 32
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     c36:	5a 94       	dec	r5
     c38:	51 10       	cpse	r5, r1
     c3a:	f8 cf       	rjmp	.-16     	; 0xc2c <__stack+0x3cd>
     c3c:	d8 cf       	rjmp	.-80     	; 0xbee <__stack+0x38f>
     c3e:	51 2c       	mov	r5, r1
     c40:	b7 01       	movw	r22, r14
     c42:	80 2f       	mov	r24, r16
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     c4a:	d3 cf       	rjmp	.-90     	; 0xbf2 <__stack+0x393>
     c4c:	08 e5       	ldi	r16, 0x58	; 88
     c4e:	10 e0       	ldi	r17, 0x00	; 0
     c50:	d5 cf       	rjmp	.-86     	; 0xbfc <__stack+0x39d>
     c52:	91 10       	cpse	r9, r1
     c54:	80 52       	subi	r24, 0x20	; 32
     c56:	b7 01       	movw	r22, r14
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	0e 94 48 09 	call	0x1290	; 0x1290 <fputc>
     c5e:	0f 5f       	subi	r16, 0xFF	; 255
     c60:	1f 4f       	sbci	r17, 0xFF	; 255
     c62:	cf cf       	rjmp	.-98     	; 0xc02 <__stack+0x3a3>
     c64:	23 e0       	ldi	r18, 0x03	; 3
     c66:	25 15       	cp	r18, r5
     c68:	10 f4       	brcc	.+4      	; 0xc6e <__stack+0x40f>
     c6a:	83 e0       	ldi	r24, 0x03	; 3
     c6c:	bd cf       	rjmp	.-134    	; 0xbe8 <__stack+0x389>
     c6e:	51 2c       	mov	r5, r1
     c70:	c0 cf       	rjmp	.-128    	; 0xbf2 <__stack+0x393>
     c72:	60 96       	adiw	r28, 0x10	; 16
     c74:	e2 e1       	ldi	r30, 0x12	; 18
     c76:	0c 94 3f 08 	jmp	0x107e	; 0x107e <__epilogue_restores__>

00000c7a <__subsf3>:
     c7a:	50 58       	subi	r21, 0x80	; 128

00000c7c <__addsf3>:
     c7c:	bb 27       	eor	r27, r27
     c7e:	aa 27       	eor	r26, r26
     c80:	0e 94 55 06 	call	0xcaa	; 0xcaa <__addsf3x>
     c84:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__fp_round>
     c88:	0e 94 62 07 	call	0xec4	; 0xec4 <__fp_pscA>
     c8c:	38 f0       	brcs	.+14     	; 0xc9c <__addsf3+0x20>
     c8e:	0e 94 69 07 	call	0xed2	; 0xed2 <__fp_pscB>
     c92:	20 f0       	brcs	.+8      	; 0xc9c <__addsf3+0x20>
     c94:	39 f4       	brne	.+14     	; 0xca4 <__addsf3+0x28>
     c96:	9f 3f       	cpi	r25, 0xFF	; 255
     c98:	19 f4       	brne	.+6      	; 0xca0 <__addsf3+0x24>
     c9a:	26 f4       	brtc	.+8      	; 0xca4 <__addsf3+0x28>
     c9c:	0c 94 5f 07 	jmp	0xebe	; 0xebe <__fp_nan>
     ca0:	0e f4       	brtc	.+2      	; 0xca4 <__addsf3+0x28>
     ca2:	e0 95       	com	r30
     ca4:	e7 fb       	bst	r30, 7
     ca6:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__fp_inf>

00000caa <__addsf3x>:
     caa:	e9 2f       	mov	r30, r25
     cac:	0e 94 81 07 	call	0xf02	; 0xf02 <__fp_split3>
     cb0:	58 f3       	brcs	.-42     	; 0xc88 <__addsf3+0xc>
     cb2:	ba 17       	cp	r27, r26
     cb4:	62 07       	cpc	r22, r18
     cb6:	73 07       	cpc	r23, r19
     cb8:	84 07       	cpc	r24, r20
     cba:	95 07       	cpc	r25, r21
     cbc:	20 f0       	brcs	.+8      	; 0xcc6 <__addsf3x+0x1c>
     cbe:	79 f4       	brne	.+30     	; 0xcde <__addsf3x+0x34>
     cc0:	a6 f5       	brtc	.+104    	; 0xd2a <__addsf3x+0x80>
     cc2:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <__fp_zero>
     cc6:	0e f4       	brtc	.+2      	; 0xcca <__addsf3x+0x20>
     cc8:	e0 95       	com	r30
     cca:	0b 2e       	mov	r0, r27
     ccc:	ba 2f       	mov	r27, r26
     cce:	a0 2d       	mov	r26, r0
     cd0:	0b 01       	movw	r0, r22
     cd2:	b9 01       	movw	r22, r18
     cd4:	90 01       	movw	r18, r0
     cd6:	0c 01       	movw	r0, r24
     cd8:	ca 01       	movw	r24, r20
     cda:	a0 01       	movw	r20, r0
     cdc:	11 24       	eor	r1, r1
     cde:	ff 27       	eor	r31, r31
     ce0:	59 1b       	sub	r21, r25
     ce2:	99 f0       	breq	.+38     	; 0xd0a <__addsf3x+0x60>
     ce4:	59 3f       	cpi	r21, 0xF9	; 249
     ce6:	50 f4       	brcc	.+20     	; 0xcfc <__addsf3x+0x52>
     ce8:	50 3e       	cpi	r21, 0xE0	; 224
     cea:	68 f1       	brcs	.+90     	; 0xd46 <__addsf3x+0x9c>
     cec:	1a 16       	cp	r1, r26
     cee:	f0 40       	sbci	r31, 0x00	; 0
     cf0:	a2 2f       	mov	r26, r18
     cf2:	23 2f       	mov	r18, r19
     cf4:	34 2f       	mov	r19, r20
     cf6:	44 27       	eor	r20, r20
     cf8:	58 5f       	subi	r21, 0xF8	; 248
     cfa:	f3 cf       	rjmp	.-26     	; 0xce2 <__addsf3x+0x38>
     cfc:	46 95       	lsr	r20
     cfe:	37 95       	ror	r19
     d00:	27 95       	ror	r18
     d02:	a7 95       	ror	r26
     d04:	f0 40       	sbci	r31, 0x00	; 0
     d06:	53 95       	inc	r21
     d08:	c9 f7       	brne	.-14     	; 0xcfc <__addsf3x+0x52>
     d0a:	7e f4       	brtc	.+30     	; 0xd2a <__addsf3x+0x80>
     d0c:	1f 16       	cp	r1, r31
     d0e:	ba 0b       	sbc	r27, r26
     d10:	62 0b       	sbc	r22, r18
     d12:	73 0b       	sbc	r23, r19
     d14:	84 0b       	sbc	r24, r20
     d16:	ba f0       	brmi	.+46     	; 0xd46 <__addsf3x+0x9c>
     d18:	91 50       	subi	r25, 0x01	; 1
     d1a:	a1 f0       	breq	.+40     	; 0xd44 <__addsf3x+0x9a>
     d1c:	ff 0f       	add	r31, r31
     d1e:	bb 1f       	adc	r27, r27
     d20:	66 1f       	adc	r22, r22
     d22:	77 1f       	adc	r23, r23
     d24:	88 1f       	adc	r24, r24
     d26:	c2 f7       	brpl	.-16     	; 0xd18 <__addsf3x+0x6e>
     d28:	0e c0       	rjmp	.+28     	; 0xd46 <__addsf3x+0x9c>
     d2a:	ba 0f       	add	r27, r26
     d2c:	62 1f       	adc	r22, r18
     d2e:	73 1f       	adc	r23, r19
     d30:	84 1f       	adc	r24, r20
     d32:	48 f4       	brcc	.+18     	; 0xd46 <__addsf3x+0x9c>
     d34:	87 95       	ror	r24
     d36:	77 95       	ror	r23
     d38:	67 95       	ror	r22
     d3a:	b7 95       	ror	r27
     d3c:	f7 95       	ror	r31
     d3e:	9e 3f       	cpi	r25, 0xFE	; 254
     d40:	08 f0       	brcs	.+2      	; 0xd44 <__addsf3x+0x9a>
     d42:	b0 cf       	rjmp	.-160    	; 0xca4 <__addsf3+0x28>
     d44:	93 95       	inc	r25
     d46:	88 0f       	add	r24, r24
     d48:	08 f0       	brcs	.+2      	; 0xd4c <__addsf3x+0xa2>
     d4a:	99 27       	eor	r25, r25
     d4c:	ee 0f       	add	r30, r30
     d4e:	97 95       	ror	r25
     d50:	87 95       	ror	r24
     d52:	08 95       	ret

00000d54 <__divsf3>:
     d54:	0e 94 be 06 	call	0xd7c	; 0xd7c <__divsf3x>
     d58:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__fp_round>
     d5c:	0e 94 69 07 	call	0xed2	; 0xed2 <__fp_pscB>
     d60:	58 f0       	brcs	.+22     	; 0xd78 <__divsf3+0x24>
     d62:	0e 94 62 07 	call	0xec4	; 0xec4 <__fp_pscA>
     d66:	40 f0       	brcs	.+16     	; 0xd78 <__divsf3+0x24>
     d68:	29 f4       	brne	.+10     	; 0xd74 <__divsf3+0x20>
     d6a:	5f 3f       	cpi	r21, 0xFF	; 255
     d6c:	29 f0       	breq	.+10     	; 0xd78 <__divsf3+0x24>
     d6e:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__fp_inf>
     d72:	51 11       	cpse	r21, r1
     d74:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <__fp_szero>
     d78:	0c 94 5f 07 	jmp	0xebe	; 0xebe <__fp_nan>

00000d7c <__divsf3x>:
     d7c:	0e 94 81 07 	call	0xf02	; 0xf02 <__fp_split3>
     d80:	68 f3       	brcs	.-38     	; 0xd5c <__divsf3+0x8>

00000d82 <__divsf3_pse>:
     d82:	99 23       	and	r25, r25
     d84:	b1 f3       	breq	.-20     	; 0xd72 <__divsf3+0x1e>
     d86:	55 23       	and	r21, r21
     d88:	91 f3       	breq	.-28     	; 0xd6e <__divsf3+0x1a>
     d8a:	95 1b       	sub	r25, r21
     d8c:	55 0b       	sbc	r21, r21
     d8e:	bb 27       	eor	r27, r27
     d90:	aa 27       	eor	r26, r26
     d92:	62 17       	cp	r22, r18
     d94:	73 07       	cpc	r23, r19
     d96:	84 07       	cpc	r24, r20
     d98:	38 f0       	brcs	.+14     	; 0xda8 <__divsf3_pse+0x26>
     d9a:	9f 5f       	subi	r25, 0xFF	; 255
     d9c:	5f 4f       	sbci	r21, 0xFF	; 255
     d9e:	22 0f       	add	r18, r18
     da0:	33 1f       	adc	r19, r19
     da2:	44 1f       	adc	r20, r20
     da4:	aa 1f       	adc	r26, r26
     da6:	a9 f3       	breq	.-22     	; 0xd92 <__divsf3_pse+0x10>
     da8:	35 d0       	rcall	.+106    	; 0xe14 <__divsf3_pse+0x92>
     daa:	0e 2e       	mov	r0, r30
     dac:	3a f0       	brmi	.+14     	; 0xdbc <__divsf3_pse+0x3a>
     dae:	e0 e8       	ldi	r30, 0x80	; 128
     db0:	32 d0       	rcall	.+100    	; 0xe16 <__divsf3_pse+0x94>
     db2:	91 50       	subi	r25, 0x01	; 1
     db4:	50 40       	sbci	r21, 0x00	; 0
     db6:	e6 95       	lsr	r30
     db8:	00 1c       	adc	r0, r0
     dba:	ca f7       	brpl	.-14     	; 0xdae <__divsf3_pse+0x2c>
     dbc:	2b d0       	rcall	.+86     	; 0xe14 <__divsf3_pse+0x92>
     dbe:	fe 2f       	mov	r31, r30
     dc0:	29 d0       	rcall	.+82     	; 0xe14 <__divsf3_pse+0x92>
     dc2:	66 0f       	add	r22, r22
     dc4:	77 1f       	adc	r23, r23
     dc6:	88 1f       	adc	r24, r24
     dc8:	bb 1f       	adc	r27, r27
     dca:	26 17       	cp	r18, r22
     dcc:	37 07       	cpc	r19, r23
     dce:	48 07       	cpc	r20, r24
     dd0:	ab 07       	cpc	r26, r27
     dd2:	b0 e8       	ldi	r27, 0x80	; 128
     dd4:	09 f0       	breq	.+2      	; 0xdd8 <__divsf3_pse+0x56>
     dd6:	bb 0b       	sbc	r27, r27
     dd8:	80 2d       	mov	r24, r0
     dda:	bf 01       	movw	r22, r30
     ddc:	ff 27       	eor	r31, r31
     dde:	93 58       	subi	r25, 0x83	; 131
     de0:	5f 4f       	sbci	r21, 0xFF	; 255
     de2:	3a f0       	brmi	.+14     	; 0xdf2 <__divsf3_pse+0x70>
     de4:	9e 3f       	cpi	r25, 0xFE	; 254
     de6:	51 05       	cpc	r21, r1
     de8:	78 f0       	brcs	.+30     	; 0xe08 <__divsf3_pse+0x86>
     dea:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__fp_inf>
     dee:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <__fp_szero>
     df2:	5f 3f       	cpi	r21, 0xFF	; 255
     df4:	e4 f3       	brlt	.-8      	; 0xdee <__divsf3_pse+0x6c>
     df6:	98 3e       	cpi	r25, 0xE8	; 232
     df8:	d4 f3       	brlt	.-12     	; 0xdee <__divsf3_pse+0x6c>
     dfa:	86 95       	lsr	r24
     dfc:	77 95       	ror	r23
     dfe:	67 95       	ror	r22
     e00:	b7 95       	ror	r27
     e02:	f7 95       	ror	r31
     e04:	9f 5f       	subi	r25, 0xFF	; 255
     e06:	c9 f7       	brne	.-14     	; 0xdfa <__divsf3_pse+0x78>
     e08:	88 0f       	add	r24, r24
     e0a:	91 1d       	adc	r25, r1
     e0c:	96 95       	lsr	r25
     e0e:	87 95       	ror	r24
     e10:	97 f9       	bld	r25, 7
     e12:	08 95       	ret
     e14:	e1 e0       	ldi	r30, 0x01	; 1
     e16:	66 0f       	add	r22, r22
     e18:	77 1f       	adc	r23, r23
     e1a:	88 1f       	adc	r24, r24
     e1c:	bb 1f       	adc	r27, r27
     e1e:	62 17       	cp	r22, r18
     e20:	73 07       	cpc	r23, r19
     e22:	84 07       	cpc	r24, r20
     e24:	ba 07       	cpc	r27, r26
     e26:	20 f0       	brcs	.+8      	; 0xe30 <__divsf3_pse+0xae>
     e28:	62 1b       	sub	r22, r18
     e2a:	73 0b       	sbc	r23, r19
     e2c:	84 0b       	sbc	r24, r20
     e2e:	ba 0b       	sbc	r27, r26
     e30:	ee 1f       	adc	r30, r30
     e32:	88 f7       	brcc	.-30     	; 0xe16 <__divsf3_pse+0x94>
     e34:	e0 95       	com	r30
     e36:	08 95       	ret

00000e38 <__floatunsisf>:
     e38:	e8 94       	clt
     e3a:	09 c0       	rjmp	.+18     	; 0xe4e <__floatsisf+0x12>

00000e3c <__floatsisf>:
     e3c:	97 fb       	bst	r25, 7
     e3e:	3e f4       	brtc	.+14     	; 0xe4e <__floatsisf+0x12>
     e40:	90 95       	com	r25
     e42:	80 95       	com	r24
     e44:	70 95       	com	r23
     e46:	61 95       	neg	r22
     e48:	7f 4f       	sbci	r23, 0xFF	; 255
     e4a:	8f 4f       	sbci	r24, 0xFF	; 255
     e4c:	9f 4f       	sbci	r25, 0xFF	; 255
     e4e:	99 23       	and	r25, r25
     e50:	a9 f0       	breq	.+42     	; 0xe7c <__floatsisf+0x40>
     e52:	f9 2f       	mov	r31, r25
     e54:	96 e9       	ldi	r25, 0x96	; 150
     e56:	bb 27       	eor	r27, r27
     e58:	93 95       	inc	r25
     e5a:	f6 95       	lsr	r31
     e5c:	87 95       	ror	r24
     e5e:	77 95       	ror	r23
     e60:	67 95       	ror	r22
     e62:	b7 95       	ror	r27
     e64:	f1 11       	cpse	r31, r1
     e66:	f8 cf       	rjmp	.-16     	; 0xe58 <__floatsisf+0x1c>
     e68:	fa f4       	brpl	.+62     	; 0xea8 <__floatsisf+0x6c>
     e6a:	bb 0f       	add	r27, r27
     e6c:	11 f4       	brne	.+4      	; 0xe72 <__floatsisf+0x36>
     e6e:	60 ff       	sbrs	r22, 0
     e70:	1b c0       	rjmp	.+54     	; 0xea8 <__floatsisf+0x6c>
     e72:	6f 5f       	subi	r22, 0xFF	; 255
     e74:	7f 4f       	sbci	r23, 0xFF	; 255
     e76:	8f 4f       	sbci	r24, 0xFF	; 255
     e78:	9f 4f       	sbci	r25, 0xFF	; 255
     e7a:	16 c0       	rjmp	.+44     	; 0xea8 <__floatsisf+0x6c>
     e7c:	88 23       	and	r24, r24
     e7e:	11 f0       	breq	.+4      	; 0xe84 <__floatsisf+0x48>
     e80:	96 e9       	ldi	r25, 0x96	; 150
     e82:	11 c0       	rjmp	.+34     	; 0xea6 <__floatsisf+0x6a>
     e84:	77 23       	and	r23, r23
     e86:	21 f0       	breq	.+8      	; 0xe90 <__floatsisf+0x54>
     e88:	9e e8       	ldi	r25, 0x8E	; 142
     e8a:	87 2f       	mov	r24, r23
     e8c:	76 2f       	mov	r23, r22
     e8e:	05 c0       	rjmp	.+10     	; 0xe9a <__floatsisf+0x5e>
     e90:	66 23       	and	r22, r22
     e92:	71 f0       	breq	.+28     	; 0xeb0 <__floatsisf+0x74>
     e94:	96 e8       	ldi	r25, 0x86	; 134
     e96:	86 2f       	mov	r24, r22
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	60 e0       	ldi	r22, 0x00	; 0
     e9c:	2a f0       	brmi	.+10     	; 0xea8 <__floatsisf+0x6c>
     e9e:	9a 95       	dec	r25
     ea0:	66 0f       	add	r22, r22
     ea2:	77 1f       	adc	r23, r23
     ea4:	88 1f       	adc	r24, r24
     ea6:	da f7       	brpl	.-10     	; 0xe9e <__floatsisf+0x62>
     ea8:	88 0f       	add	r24, r24
     eaa:	96 95       	lsr	r25
     eac:	87 95       	ror	r24
     eae:	97 f9       	bld	r25, 7
     eb0:	08 95       	ret

00000eb2 <__fp_inf>:
     eb2:	97 f9       	bld	r25, 7
     eb4:	9f 67       	ori	r25, 0x7F	; 127
     eb6:	80 e8       	ldi	r24, 0x80	; 128
     eb8:	70 e0       	ldi	r23, 0x00	; 0
     eba:	60 e0       	ldi	r22, 0x00	; 0
     ebc:	08 95       	ret

00000ebe <__fp_nan>:
     ebe:	9f ef       	ldi	r25, 0xFF	; 255
     ec0:	80 ec       	ldi	r24, 0xC0	; 192
     ec2:	08 95       	ret

00000ec4 <__fp_pscA>:
     ec4:	00 24       	eor	r0, r0
     ec6:	0a 94       	dec	r0
     ec8:	16 16       	cp	r1, r22
     eca:	17 06       	cpc	r1, r23
     ecc:	18 06       	cpc	r1, r24
     ece:	09 06       	cpc	r0, r25
     ed0:	08 95       	ret

00000ed2 <__fp_pscB>:
     ed2:	00 24       	eor	r0, r0
     ed4:	0a 94       	dec	r0
     ed6:	12 16       	cp	r1, r18
     ed8:	13 06       	cpc	r1, r19
     eda:	14 06       	cpc	r1, r20
     edc:	05 06       	cpc	r0, r21
     ede:	08 95       	ret

00000ee0 <__fp_round>:
     ee0:	09 2e       	mov	r0, r25
     ee2:	03 94       	inc	r0
     ee4:	00 0c       	add	r0, r0
     ee6:	11 f4       	brne	.+4      	; 0xeec <__fp_round+0xc>
     ee8:	88 23       	and	r24, r24
     eea:	52 f0       	brmi	.+20     	; 0xf00 <__fp_round+0x20>
     eec:	bb 0f       	add	r27, r27
     eee:	40 f4       	brcc	.+16     	; 0xf00 <__fp_round+0x20>
     ef0:	bf 2b       	or	r27, r31
     ef2:	11 f4       	brne	.+4      	; 0xef8 <__fp_round+0x18>
     ef4:	60 ff       	sbrs	r22, 0
     ef6:	04 c0       	rjmp	.+8      	; 0xf00 <__fp_round+0x20>
     ef8:	6f 5f       	subi	r22, 0xFF	; 255
     efa:	7f 4f       	sbci	r23, 0xFF	; 255
     efc:	8f 4f       	sbci	r24, 0xFF	; 255
     efe:	9f 4f       	sbci	r25, 0xFF	; 255
     f00:	08 95       	ret

00000f02 <__fp_split3>:
     f02:	57 fd       	sbrc	r21, 7
     f04:	90 58       	subi	r25, 0x80	; 128
     f06:	44 0f       	add	r20, r20
     f08:	55 1f       	adc	r21, r21
     f0a:	59 f0       	breq	.+22     	; 0xf22 <__fp_splitA+0x10>
     f0c:	5f 3f       	cpi	r21, 0xFF	; 255
     f0e:	71 f0       	breq	.+28     	; 0xf2c <__fp_splitA+0x1a>
     f10:	47 95       	ror	r20

00000f12 <__fp_splitA>:
     f12:	88 0f       	add	r24, r24
     f14:	97 fb       	bst	r25, 7
     f16:	99 1f       	adc	r25, r25
     f18:	61 f0       	breq	.+24     	; 0xf32 <__fp_splitA+0x20>
     f1a:	9f 3f       	cpi	r25, 0xFF	; 255
     f1c:	79 f0       	breq	.+30     	; 0xf3c <__fp_splitA+0x2a>
     f1e:	87 95       	ror	r24
     f20:	08 95       	ret
     f22:	12 16       	cp	r1, r18
     f24:	13 06       	cpc	r1, r19
     f26:	14 06       	cpc	r1, r20
     f28:	55 1f       	adc	r21, r21
     f2a:	f2 cf       	rjmp	.-28     	; 0xf10 <__fp_split3+0xe>
     f2c:	46 95       	lsr	r20
     f2e:	f1 df       	rcall	.-30     	; 0xf12 <__fp_splitA>
     f30:	08 c0       	rjmp	.+16     	; 0xf42 <__fp_splitA+0x30>
     f32:	16 16       	cp	r1, r22
     f34:	17 06       	cpc	r1, r23
     f36:	18 06       	cpc	r1, r24
     f38:	99 1f       	adc	r25, r25
     f3a:	f1 cf       	rjmp	.-30     	; 0xf1e <__fp_splitA+0xc>
     f3c:	86 95       	lsr	r24
     f3e:	71 05       	cpc	r23, r1
     f40:	61 05       	cpc	r22, r1
     f42:	08 94       	sec
     f44:	08 95       	ret

00000f46 <__fp_zero>:
     f46:	e8 94       	clt

00000f48 <__fp_szero>:
     f48:	bb 27       	eor	r27, r27
     f4a:	66 27       	eor	r22, r22
     f4c:	77 27       	eor	r23, r23
     f4e:	cb 01       	movw	r24, r22
     f50:	97 f9       	bld	r25, 7
     f52:	08 95       	ret

00000f54 <__mulsf3>:
     f54:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__mulsf3x>
     f58:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__fp_round>
     f5c:	0e 94 62 07 	call	0xec4	; 0xec4 <__fp_pscA>
     f60:	38 f0       	brcs	.+14     	; 0xf70 <__mulsf3+0x1c>
     f62:	0e 94 69 07 	call	0xed2	; 0xed2 <__fp_pscB>
     f66:	20 f0       	brcs	.+8      	; 0xf70 <__mulsf3+0x1c>
     f68:	95 23       	and	r25, r21
     f6a:	11 f0       	breq	.+4      	; 0xf70 <__mulsf3+0x1c>
     f6c:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__fp_inf>
     f70:	0c 94 5f 07 	jmp	0xebe	; 0xebe <__fp_nan>
     f74:	11 24       	eor	r1, r1
     f76:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <__fp_szero>

00000f7a <__mulsf3x>:
     f7a:	0e 94 81 07 	call	0xf02	; 0xf02 <__fp_split3>
     f7e:	70 f3       	brcs	.-36     	; 0xf5c <__mulsf3+0x8>

00000f80 <__mulsf3_pse>:
     f80:	95 9f       	mul	r25, r21
     f82:	c1 f3       	breq	.-16     	; 0xf74 <__mulsf3+0x20>
     f84:	95 0f       	add	r25, r21
     f86:	50 e0       	ldi	r21, 0x00	; 0
     f88:	55 1f       	adc	r21, r21
     f8a:	62 9f       	mul	r22, r18
     f8c:	f0 01       	movw	r30, r0
     f8e:	72 9f       	mul	r23, r18
     f90:	bb 27       	eor	r27, r27
     f92:	f0 0d       	add	r31, r0
     f94:	b1 1d       	adc	r27, r1
     f96:	63 9f       	mul	r22, r19
     f98:	aa 27       	eor	r26, r26
     f9a:	f0 0d       	add	r31, r0
     f9c:	b1 1d       	adc	r27, r1
     f9e:	aa 1f       	adc	r26, r26
     fa0:	64 9f       	mul	r22, r20
     fa2:	66 27       	eor	r22, r22
     fa4:	b0 0d       	add	r27, r0
     fa6:	a1 1d       	adc	r26, r1
     fa8:	66 1f       	adc	r22, r22
     faa:	82 9f       	mul	r24, r18
     fac:	22 27       	eor	r18, r18
     fae:	b0 0d       	add	r27, r0
     fb0:	a1 1d       	adc	r26, r1
     fb2:	62 1f       	adc	r22, r18
     fb4:	73 9f       	mul	r23, r19
     fb6:	b0 0d       	add	r27, r0
     fb8:	a1 1d       	adc	r26, r1
     fba:	62 1f       	adc	r22, r18
     fbc:	83 9f       	mul	r24, r19
     fbe:	a0 0d       	add	r26, r0
     fc0:	61 1d       	adc	r22, r1
     fc2:	22 1f       	adc	r18, r18
     fc4:	74 9f       	mul	r23, r20
     fc6:	33 27       	eor	r19, r19
     fc8:	a0 0d       	add	r26, r0
     fca:	61 1d       	adc	r22, r1
     fcc:	23 1f       	adc	r18, r19
     fce:	84 9f       	mul	r24, r20
     fd0:	60 0d       	add	r22, r0
     fd2:	21 1d       	adc	r18, r1
     fd4:	82 2f       	mov	r24, r18
     fd6:	76 2f       	mov	r23, r22
     fd8:	6a 2f       	mov	r22, r26
     fda:	11 24       	eor	r1, r1
     fdc:	9f 57       	subi	r25, 0x7F	; 127
     fde:	50 40       	sbci	r21, 0x00	; 0
     fe0:	9a f0       	brmi	.+38     	; 0x1008 <__mulsf3_pse+0x88>
     fe2:	f1 f0       	breq	.+60     	; 0x1020 <__mulsf3_pse+0xa0>
     fe4:	88 23       	and	r24, r24
     fe6:	4a f0       	brmi	.+18     	; 0xffa <__mulsf3_pse+0x7a>
     fe8:	ee 0f       	add	r30, r30
     fea:	ff 1f       	adc	r31, r31
     fec:	bb 1f       	adc	r27, r27
     fee:	66 1f       	adc	r22, r22
     ff0:	77 1f       	adc	r23, r23
     ff2:	88 1f       	adc	r24, r24
     ff4:	91 50       	subi	r25, 0x01	; 1
     ff6:	50 40       	sbci	r21, 0x00	; 0
     ff8:	a9 f7       	brne	.-22     	; 0xfe4 <__mulsf3_pse+0x64>
     ffa:	9e 3f       	cpi	r25, 0xFE	; 254
     ffc:	51 05       	cpc	r21, r1
     ffe:	80 f0       	brcs	.+32     	; 0x1020 <__mulsf3_pse+0xa0>
    1000:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__fp_inf>
    1004:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <__fp_szero>
    1008:	5f 3f       	cpi	r21, 0xFF	; 255
    100a:	e4 f3       	brlt	.-8      	; 0x1004 <__mulsf3_pse+0x84>
    100c:	98 3e       	cpi	r25, 0xE8	; 232
    100e:	d4 f3       	brlt	.-12     	; 0x1004 <__mulsf3_pse+0x84>
    1010:	86 95       	lsr	r24
    1012:	77 95       	ror	r23
    1014:	67 95       	ror	r22
    1016:	b7 95       	ror	r27
    1018:	f7 95       	ror	r31
    101a:	e7 95       	ror	r30
    101c:	9f 5f       	subi	r25, 0xFF	; 255
    101e:	c1 f7       	brne	.-16     	; 0x1010 <__mulsf3_pse+0x90>
    1020:	fe 2b       	or	r31, r30
    1022:	88 0f       	add	r24, r24
    1024:	91 1d       	adc	r25, r1
    1026:	96 95       	lsr	r25
    1028:	87 95       	ror	r24
    102a:	97 f9       	bld	r25, 7
    102c:	08 95       	ret

0000102e <__udivmodqi4>:
    102e:	99 1b       	sub	r25, r25
    1030:	79 e0       	ldi	r23, 0x09	; 9
    1032:	04 c0       	rjmp	.+8      	; 0x103c <__udivmodqi4_ep>

00001034 <__udivmodqi4_loop>:
    1034:	99 1f       	adc	r25, r25
    1036:	96 17       	cp	r25, r22
    1038:	08 f0       	brcs	.+2      	; 0x103c <__udivmodqi4_ep>
    103a:	96 1b       	sub	r25, r22

0000103c <__udivmodqi4_ep>:
    103c:	88 1f       	adc	r24, r24
    103e:	7a 95       	dec	r23
    1040:	c9 f7       	brne	.-14     	; 0x1034 <__udivmodqi4_loop>
    1042:	80 95       	com	r24
    1044:	08 95       	ret

00001046 <__prologue_saves__>:
    1046:	2f 92       	push	r2
    1048:	3f 92       	push	r3
    104a:	4f 92       	push	r4
    104c:	5f 92       	push	r5
    104e:	6f 92       	push	r6
    1050:	7f 92       	push	r7
    1052:	8f 92       	push	r8
    1054:	9f 92       	push	r9
    1056:	af 92       	push	r10
    1058:	bf 92       	push	r11
    105a:	cf 92       	push	r12
    105c:	df 92       	push	r13
    105e:	ef 92       	push	r14
    1060:	ff 92       	push	r15
    1062:	0f 93       	push	r16
    1064:	1f 93       	push	r17
    1066:	cf 93       	push	r28
    1068:	df 93       	push	r29
    106a:	cd b7       	in	r28, 0x3d	; 61
    106c:	de b7       	in	r29, 0x3e	; 62
    106e:	ca 1b       	sub	r28, r26
    1070:	db 0b       	sbc	r29, r27
    1072:	0f b6       	in	r0, 0x3f	; 63
    1074:	f8 94       	cli
    1076:	de bf       	out	0x3e, r29	; 62
    1078:	0f be       	out	0x3f, r0	; 63
    107a:	cd bf       	out	0x3d, r28	; 61
    107c:	09 94       	ijmp

0000107e <__epilogue_restores__>:
    107e:	2a 88       	ldd	r2, Y+18	; 0x12
    1080:	39 88       	ldd	r3, Y+17	; 0x11
    1082:	48 88       	ldd	r4, Y+16	; 0x10
    1084:	5f 84       	ldd	r5, Y+15	; 0x0f
    1086:	6e 84       	ldd	r6, Y+14	; 0x0e
    1088:	7d 84       	ldd	r7, Y+13	; 0x0d
    108a:	8c 84       	ldd	r8, Y+12	; 0x0c
    108c:	9b 84       	ldd	r9, Y+11	; 0x0b
    108e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1090:	b9 84       	ldd	r11, Y+9	; 0x09
    1092:	c8 84       	ldd	r12, Y+8	; 0x08
    1094:	df 80       	ldd	r13, Y+7	; 0x07
    1096:	ee 80       	ldd	r14, Y+6	; 0x06
    1098:	fd 80       	ldd	r15, Y+5	; 0x05
    109a:	0c 81       	ldd	r16, Y+4	; 0x04
    109c:	1b 81       	ldd	r17, Y+3	; 0x03
    109e:	aa 81       	ldd	r26, Y+2	; 0x02
    10a0:	b9 81       	ldd	r27, Y+1	; 0x01
    10a2:	ce 0f       	add	r28, r30
    10a4:	d1 1d       	adc	r29, r1
    10a6:	0f b6       	in	r0, 0x3f	; 63
    10a8:	f8 94       	cli
    10aa:	de bf       	out	0x3e, r29	; 62
    10ac:	0f be       	out	0x3f, r0	; 63
    10ae:	cd bf       	out	0x3d, r28	; 61
    10b0:	ed 01       	movw	r28, r26
    10b2:	08 95       	ret

000010b4 <__ftoa_engine>:
    10b4:	28 30       	cpi	r18, 0x08	; 8
    10b6:	08 f0       	brcs	.+2      	; 0x10ba <__ftoa_engine+0x6>
    10b8:	27 e0       	ldi	r18, 0x07	; 7
    10ba:	33 27       	eor	r19, r19
    10bc:	da 01       	movw	r26, r20
    10be:	99 0f       	add	r25, r25
    10c0:	31 1d       	adc	r19, r1
    10c2:	87 fd       	sbrc	r24, 7
    10c4:	91 60       	ori	r25, 0x01	; 1
    10c6:	00 96       	adiw	r24, 0x00	; 0
    10c8:	61 05       	cpc	r22, r1
    10ca:	71 05       	cpc	r23, r1
    10cc:	39 f4       	brne	.+14     	; 0x10dc <__ftoa_engine+0x28>
    10ce:	32 60       	ori	r19, 0x02	; 2
    10d0:	2e 5f       	subi	r18, 0xFE	; 254
    10d2:	3d 93       	st	X+, r19
    10d4:	30 e3       	ldi	r19, 0x30	; 48
    10d6:	2a 95       	dec	r18
    10d8:	e1 f7       	brne	.-8      	; 0x10d2 <__ftoa_engine+0x1e>
    10da:	08 95       	ret
    10dc:	9f 3f       	cpi	r25, 0xFF	; 255
    10de:	30 f0       	brcs	.+12     	; 0x10ec <__ftoa_engine+0x38>
    10e0:	80 38       	cpi	r24, 0x80	; 128
    10e2:	71 05       	cpc	r23, r1
    10e4:	61 05       	cpc	r22, r1
    10e6:	09 f0       	breq	.+2      	; 0x10ea <__ftoa_engine+0x36>
    10e8:	3c 5f       	subi	r19, 0xFC	; 252
    10ea:	3c 5f       	subi	r19, 0xFC	; 252
    10ec:	3d 93       	st	X+, r19
    10ee:	91 30       	cpi	r25, 0x01	; 1
    10f0:	08 f0       	brcs	.+2      	; 0x10f4 <__ftoa_engine+0x40>
    10f2:	80 68       	ori	r24, 0x80	; 128
    10f4:	91 1d       	adc	r25, r1
    10f6:	df 93       	push	r29
    10f8:	cf 93       	push	r28
    10fa:	1f 93       	push	r17
    10fc:	0f 93       	push	r16
    10fe:	ff 92       	push	r15
    1100:	ef 92       	push	r14
    1102:	19 2f       	mov	r17, r25
    1104:	98 7f       	andi	r25, 0xF8	; 248
    1106:	96 95       	lsr	r25
    1108:	e9 2f       	mov	r30, r25
    110a:	96 95       	lsr	r25
    110c:	96 95       	lsr	r25
    110e:	e9 0f       	add	r30, r25
    1110:	ff 27       	eor	r31, r31
    1112:	ea 54       	subi	r30, 0x4A	; 74
    1114:	ff 4f       	sbci	r31, 0xFF	; 255
    1116:	99 27       	eor	r25, r25
    1118:	33 27       	eor	r19, r19
    111a:	ee 24       	eor	r14, r14
    111c:	ff 24       	eor	r15, r15
    111e:	a7 01       	movw	r20, r14
    1120:	e7 01       	movw	r28, r14
    1122:	05 90       	lpm	r0, Z+
    1124:	08 94       	sec
    1126:	07 94       	ror	r0
    1128:	28 f4       	brcc	.+10     	; 0x1134 <__ftoa_engine+0x80>
    112a:	36 0f       	add	r19, r22
    112c:	e7 1e       	adc	r14, r23
    112e:	f8 1e       	adc	r15, r24
    1130:	49 1f       	adc	r20, r25
    1132:	51 1d       	adc	r21, r1
    1134:	66 0f       	add	r22, r22
    1136:	77 1f       	adc	r23, r23
    1138:	88 1f       	adc	r24, r24
    113a:	99 1f       	adc	r25, r25
    113c:	06 94       	lsr	r0
    113e:	a1 f7       	brne	.-24     	; 0x1128 <__ftoa_engine+0x74>
    1140:	05 90       	lpm	r0, Z+
    1142:	07 94       	ror	r0
    1144:	28 f4       	brcc	.+10     	; 0x1150 <__ftoa_engine+0x9c>
    1146:	e7 0e       	add	r14, r23
    1148:	f8 1e       	adc	r15, r24
    114a:	49 1f       	adc	r20, r25
    114c:	56 1f       	adc	r21, r22
    114e:	c1 1d       	adc	r28, r1
    1150:	77 0f       	add	r23, r23
    1152:	88 1f       	adc	r24, r24
    1154:	99 1f       	adc	r25, r25
    1156:	66 1f       	adc	r22, r22
    1158:	06 94       	lsr	r0
    115a:	a1 f7       	brne	.-24     	; 0x1144 <__ftoa_engine+0x90>
    115c:	05 90       	lpm	r0, Z+
    115e:	07 94       	ror	r0
    1160:	28 f4       	brcc	.+10     	; 0x116c <__ftoa_engine+0xb8>
    1162:	f8 0e       	add	r15, r24
    1164:	49 1f       	adc	r20, r25
    1166:	56 1f       	adc	r21, r22
    1168:	c7 1f       	adc	r28, r23
    116a:	d1 1d       	adc	r29, r1
    116c:	88 0f       	add	r24, r24
    116e:	99 1f       	adc	r25, r25
    1170:	66 1f       	adc	r22, r22
    1172:	77 1f       	adc	r23, r23
    1174:	06 94       	lsr	r0
    1176:	a1 f7       	brne	.-24     	; 0x1160 <__ftoa_engine+0xac>
    1178:	05 90       	lpm	r0, Z+
    117a:	07 94       	ror	r0
    117c:	20 f4       	brcc	.+8      	; 0x1186 <__ftoa_engine+0xd2>
    117e:	49 0f       	add	r20, r25
    1180:	56 1f       	adc	r21, r22
    1182:	c7 1f       	adc	r28, r23
    1184:	d8 1f       	adc	r29, r24
    1186:	99 0f       	add	r25, r25
    1188:	66 1f       	adc	r22, r22
    118a:	77 1f       	adc	r23, r23
    118c:	88 1f       	adc	r24, r24
    118e:	06 94       	lsr	r0
    1190:	a9 f7       	brne	.-22     	; 0x117c <__ftoa_engine+0xc8>
    1192:	84 91       	lpm	r24, Z
    1194:	10 95       	com	r17
    1196:	17 70       	andi	r17, 0x07	; 7
    1198:	41 f0       	breq	.+16     	; 0x11aa <__ftoa_engine+0xf6>
    119a:	d6 95       	lsr	r29
    119c:	c7 95       	ror	r28
    119e:	57 95       	ror	r21
    11a0:	47 95       	ror	r20
    11a2:	f7 94       	ror	r15
    11a4:	e7 94       	ror	r14
    11a6:	1a 95       	dec	r17
    11a8:	c1 f7       	brne	.-16     	; 0x119a <__ftoa_engine+0xe6>
    11aa:	ec e5       	ldi	r30, 0x5C	; 92
    11ac:	f0 e0       	ldi	r31, 0x00	; 0
    11ae:	68 94       	set
    11b0:	15 90       	lpm	r1, Z+
    11b2:	15 91       	lpm	r17, Z+
    11b4:	35 91       	lpm	r19, Z+
    11b6:	65 91       	lpm	r22, Z+
    11b8:	95 91       	lpm	r25, Z+
    11ba:	05 90       	lpm	r0, Z+
    11bc:	7f e2       	ldi	r23, 0x2F	; 47
    11be:	73 95       	inc	r23
    11c0:	e1 18       	sub	r14, r1
    11c2:	f1 0a       	sbc	r15, r17
    11c4:	43 0b       	sbc	r20, r19
    11c6:	56 0b       	sbc	r21, r22
    11c8:	c9 0b       	sbc	r28, r25
    11ca:	d0 09       	sbc	r29, r0
    11cc:	c0 f7       	brcc	.-16     	; 0x11be <__ftoa_engine+0x10a>
    11ce:	e1 0c       	add	r14, r1
    11d0:	f1 1e       	adc	r15, r17
    11d2:	43 1f       	adc	r20, r19
    11d4:	56 1f       	adc	r21, r22
    11d6:	c9 1f       	adc	r28, r25
    11d8:	d0 1d       	adc	r29, r0
    11da:	7e f4       	brtc	.+30     	; 0x11fa <__ftoa_engine+0x146>
    11dc:	70 33       	cpi	r23, 0x30	; 48
    11de:	11 f4       	brne	.+4      	; 0x11e4 <__ftoa_engine+0x130>
    11e0:	8a 95       	dec	r24
    11e2:	e6 cf       	rjmp	.-52     	; 0x11b0 <__ftoa_engine+0xfc>
    11e4:	e8 94       	clt
    11e6:	01 50       	subi	r16, 0x01	; 1
    11e8:	30 f0       	brcs	.+12     	; 0x11f6 <__ftoa_engine+0x142>
    11ea:	08 0f       	add	r16, r24
    11ec:	0a f4       	brpl	.+2      	; 0x11f0 <__ftoa_engine+0x13c>
    11ee:	00 27       	eor	r16, r16
    11f0:	02 17       	cp	r16, r18
    11f2:	08 f4       	brcc	.+2      	; 0x11f6 <__ftoa_engine+0x142>
    11f4:	20 2f       	mov	r18, r16
    11f6:	23 95       	inc	r18
    11f8:	02 2f       	mov	r16, r18
    11fa:	7a 33       	cpi	r23, 0x3A	; 58
    11fc:	28 f0       	brcs	.+10     	; 0x1208 <__ftoa_engine+0x154>
    11fe:	79 e3       	ldi	r23, 0x39	; 57
    1200:	7d 93       	st	X+, r23
    1202:	2a 95       	dec	r18
    1204:	e9 f7       	brne	.-6      	; 0x1200 <__ftoa_engine+0x14c>
    1206:	10 c0       	rjmp	.+32     	; 0x1228 <__ftoa_engine+0x174>
    1208:	7d 93       	st	X+, r23
    120a:	2a 95       	dec	r18
    120c:	89 f6       	brne	.-94     	; 0x11b0 <__ftoa_engine+0xfc>
    120e:	06 94       	lsr	r0
    1210:	97 95       	ror	r25
    1212:	67 95       	ror	r22
    1214:	37 95       	ror	r19
    1216:	17 95       	ror	r17
    1218:	17 94       	ror	r1
    121a:	e1 18       	sub	r14, r1
    121c:	f1 0a       	sbc	r15, r17
    121e:	43 0b       	sbc	r20, r19
    1220:	56 0b       	sbc	r21, r22
    1222:	c9 0b       	sbc	r28, r25
    1224:	d0 09       	sbc	r29, r0
    1226:	98 f0       	brcs	.+38     	; 0x124e <__ftoa_engine+0x19a>
    1228:	23 95       	inc	r18
    122a:	7e 91       	ld	r23, -X
    122c:	73 95       	inc	r23
    122e:	7a 33       	cpi	r23, 0x3A	; 58
    1230:	08 f0       	brcs	.+2      	; 0x1234 <__ftoa_engine+0x180>
    1232:	70 e3       	ldi	r23, 0x30	; 48
    1234:	7c 93       	st	X, r23
    1236:	20 13       	cpse	r18, r16
    1238:	b8 f7       	brcc	.-18     	; 0x1228 <__ftoa_engine+0x174>
    123a:	7e 91       	ld	r23, -X
    123c:	70 61       	ori	r23, 0x10	; 16
    123e:	7d 93       	st	X+, r23
    1240:	30 f0       	brcs	.+12     	; 0x124e <__ftoa_engine+0x19a>
    1242:	83 95       	inc	r24
    1244:	71 e3       	ldi	r23, 0x31	; 49
    1246:	7d 93       	st	X+, r23
    1248:	70 e3       	ldi	r23, 0x30	; 48
    124a:	2a 95       	dec	r18
    124c:	e1 f7       	brne	.-8      	; 0x1246 <__ftoa_engine+0x192>
    124e:	11 24       	eor	r1, r1
    1250:	ef 90       	pop	r14
    1252:	ff 90       	pop	r15
    1254:	0f 91       	pop	r16
    1256:	1f 91       	pop	r17
    1258:	cf 91       	pop	r28
    125a:	df 91       	pop	r29
    125c:	99 27       	eor	r25, r25
    125e:	87 fd       	sbrc	r24, 7
    1260:	90 95       	com	r25
    1262:	08 95       	ret

00001264 <strnlen_P>:
    1264:	fc 01       	movw	r30, r24
    1266:	05 90       	lpm	r0, Z+
    1268:	61 50       	subi	r22, 0x01	; 1
    126a:	70 40       	sbci	r23, 0x00	; 0
    126c:	01 10       	cpse	r0, r1
    126e:	d8 f7       	brcc	.-10     	; 0x1266 <strnlen_P+0x2>
    1270:	80 95       	com	r24
    1272:	90 95       	com	r25
    1274:	8e 0f       	add	r24, r30
    1276:	9f 1f       	adc	r25, r31
    1278:	08 95       	ret

0000127a <strnlen>:
    127a:	fc 01       	movw	r30, r24
    127c:	61 50       	subi	r22, 0x01	; 1
    127e:	70 40       	sbci	r23, 0x00	; 0
    1280:	01 90       	ld	r0, Z+
    1282:	01 10       	cpse	r0, r1
    1284:	d8 f7       	brcc	.-10     	; 0x127c <strnlen+0x2>
    1286:	80 95       	com	r24
    1288:	90 95       	com	r25
    128a:	8e 0f       	add	r24, r30
    128c:	9f 1f       	adc	r25, r31
    128e:	08 95       	ret

00001290 <fputc>:
    1290:	0f 93       	push	r16
    1292:	1f 93       	push	r17
    1294:	cf 93       	push	r28
    1296:	df 93       	push	r29
    1298:	fb 01       	movw	r30, r22
    129a:	23 81       	ldd	r18, Z+3	; 0x03
    129c:	21 fd       	sbrc	r18, 1
    129e:	03 c0       	rjmp	.+6      	; 0x12a6 <fputc+0x16>
    12a0:	8f ef       	ldi	r24, 0xFF	; 255
    12a2:	9f ef       	ldi	r25, 0xFF	; 255
    12a4:	2c c0       	rjmp	.+88     	; 0x12fe <fputc+0x6e>
    12a6:	22 ff       	sbrs	r18, 2
    12a8:	16 c0       	rjmp	.+44     	; 0x12d6 <fputc+0x46>
    12aa:	46 81       	ldd	r20, Z+6	; 0x06
    12ac:	57 81       	ldd	r21, Z+7	; 0x07
    12ae:	24 81       	ldd	r18, Z+4	; 0x04
    12b0:	35 81       	ldd	r19, Z+5	; 0x05
    12b2:	42 17       	cp	r20, r18
    12b4:	53 07       	cpc	r21, r19
    12b6:	44 f4       	brge	.+16     	; 0x12c8 <fputc+0x38>
    12b8:	a0 81       	ld	r26, Z
    12ba:	b1 81       	ldd	r27, Z+1	; 0x01
    12bc:	9d 01       	movw	r18, r26
    12be:	2f 5f       	subi	r18, 0xFF	; 255
    12c0:	3f 4f       	sbci	r19, 0xFF	; 255
    12c2:	31 83       	std	Z+1, r19	; 0x01
    12c4:	20 83       	st	Z, r18
    12c6:	8c 93       	st	X, r24
    12c8:	26 81       	ldd	r18, Z+6	; 0x06
    12ca:	37 81       	ldd	r19, Z+7	; 0x07
    12cc:	2f 5f       	subi	r18, 0xFF	; 255
    12ce:	3f 4f       	sbci	r19, 0xFF	; 255
    12d0:	37 83       	std	Z+7, r19	; 0x07
    12d2:	26 83       	std	Z+6, r18	; 0x06
    12d4:	14 c0       	rjmp	.+40     	; 0x12fe <fputc+0x6e>
    12d6:	8b 01       	movw	r16, r22
    12d8:	ec 01       	movw	r28, r24
    12da:	fb 01       	movw	r30, r22
    12dc:	00 84       	ldd	r0, Z+8	; 0x08
    12de:	f1 85       	ldd	r31, Z+9	; 0x09
    12e0:	e0 2d       	mov	r30, r0
    12e2:	09 95       	icall
    12e4:	89 2b       	or	r24, r25
    12e6:	e1 f6       	brne	.-72     	; 0x12a0 <fputc+0x10>
    12e8:	d8 01       	movw	r26, r16
    12ea:	16 96       	adiw	r26, 0x06	; 6
    12ec:	8d 91       	ld	r24, X+
    12ee:	9c 91       	ld	r25, X
    12f0:	17 97       	sbiw	r26, 0x07	; 7
    12f2:	01 96       	adiw	r24, 0x01	; 1
    12f4:	17 96       	adiw	r26, 0x07	; 7
    12f6:	9c 93       	st	X, r25
    12f8:	8e 93       	st	-X, r24
    12fa:	16 97       	sbiw	r26, 0x06	; 6
    12fc:	ce 01       	movw	r24, r28
    12fe:	df 91       	pop	r29
    1300:	cf 91       	pop	r28
    1302:	1f 91       	pop	r17
    1304:	0f 91       	pop	r16
    1306:	08 95       	ret

00001308 <printf>:
    1308:	a0 e0       	ldi	r26, 0x00	; 0
    130a:	b0 e0       	ldi	r27, 0x00	; 0
    130c:	ea e8       	ldi	r30, 0x8A	; 138
    130e:	f9 e0       	ldi	r31, 0x09	; 9
    1310:	0c 94 33 08 	jmp	0x1066	; 0x1066 <__prologue_saves__+0x20>
    1314:	ae 01       	movw	r20, r28
    1316:	4b 5f       	subi	r20, 0xFB	; 251
    1318:	5f 4f       	sbci	r21, 0xFF	; 255
    131a:	fa 01       	movw	r30, r20
    131c:	61 91       	ld	r22, Z+
    131e:	71 91       	ld	r23, Z+
    1320:	af 01       	movw	r20, r30
    1322:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <__iob+0x2>
    1326:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__iob+0x3>
    132a:	0e 94 c0 02 	call	0x580	; 0x580 <vfprintf>
    132e:	e2 e0       	ldi	r30, 0x02	; 2
    1330:	0c 94 4f 08 	jmp	0x109e	; 0x109e <__epilogue_restores__+0x20>

00001334 <__ultoa_invert>:
    1334:	fa 01       	movw	r30, r20
    1336:	aa 27       	eor	r26, r26
    1338:	28 30       	cpi	r18, 0x08	; 8
    133a:	51 f1       	breq	.+84     	; 0x1390 <__ultoa_invert+0x5c>
    133c:	20 31       	cpi	r18, 0x10	; 16
    133e:	81 f1       	breq	.+96     	; 0x13a0 <__ultoa_invert+0x6c>
    1340:	e8 94       	clt
    1342:	6f 93       	push	r22
    1344:	6e 7f       	andi	r22, 0xFE	; 254
    1346:	6e 5f       	subi	r22, 0xFE	; 254
    1348:	7f 4f       	sbci	r23, 0xFF	; 255
    134a:	8f 4f       	sbci	r24, 0xFF	; 255
    134c:	9f 4f       	sbci	r25, 0xFF	; 255
    134e:	af 4f       	sbci	r26, 0xFF	; 255
    1350:	b1 e0       	ldi	r27, 0x01	; 1
    1352:	3e d0       	rcall	.+124    	; 0x13d0 <__ultoa_invert+0x9c>
    1354:	b4 e0       	ldi	r27, 0x04	; 4
    1356:	3c d0       	rcall	.+120    	; 0x13d0 <__ultoa_invert+0x9c>
    1358:	67 0f       	add	r22, r23
    135a:	78 1f       	adc	r23, r24
    135c:	89 1f       	adc	r24, r25
    135e:	9a 1f       	adc	r25, r26
    1360:	a1 1d       	adc	r26, r1
    1362:	68 0f       	add	r22, r24
    1364:	79 1f       	adc	r23, r25
    1366:	8a 1f       	adc	r24, r26
    1368:	91 1d       	adc	r25, r1
    136a:	a1 1d       	adc	r26, r1
    136c:	6a 0f       	add	r22, r26
    136e:	71 1d       	adc	r23, r1
    1370:	81 1d       	adc	r24, r1
    1372:	91 1d       	adc	r25, r1
    1374:	a1 1d       	adc	r26, r1
    1376:	20 d0       	rcall	.+64     	; 0x13b8 <__ultoa_invert+0x84>
    1378:	09 f4       	brne	.+2      	; 0x137c <__ultoa_invert+0x48>
    137a:	68 94       	set
    137c:	3f 91       	pop	r19
    137e:	2a e0       	ldi	r18, 0x0A	; 10
    1380:	26 9f       	mul	r18, r22
    1382:	11 24       	eor	r1, r1
    1384:	30 19       	sub	r19, r0
    1386:	30 5d       	subi	r19, 0xD0	; 208
    1388:	31 93       	st	Z+, r19
    138a:	de f6       	brtc	.-74     	; 0x1342 <__ultoa_invert+0xe>
    138c:	cf 01       	movw	r24, r30
    138e:	08 95       	ret
    1390:	46 2f       	mov	r20, r22
    1392:	47 70       	andi	r20, 0x07	; 7
    1394:	40 5d       	subi	r20, 0xD0	; 208
    1396:	41 93       	st	Z+, r20
    1398:	b3 e0       	ldi	r27, 0x03	; 3
    139a:	0f d0       	rcall	.+30     	; 0x13ba <__ultoa_invert+0x86>
    139c:	c9 f7       	brne	.-14     	; 0x1390 <__ultoa_invert+0x5c>
    139e:	f6 cf       	rjmp	.-20     	; 0x138c <__ultoa_invert+0x58>
    13a0:	46 2f       	mov	r20, r22
    13a2:	4f 70       	andi	r20, 0x0F	; 15
    13a4:	40 5d       	subi	r20, 0xD0	; 208
    13a6:	4a 33       	cpi	r20, 0x3A	; 58
    13a8:	18 f0       	brcs	.+6      	; 0x13b0 <__ultoa_invert+0x7c>
    13aa:	49 5d       	subi	r20, 0xD9	; 217
    13ac:	31 fd       	sbrc	r19, 1
    13ae:	40 52       	subi	r20, 0x20	; 32
    13b0:	41 93       	st	Z+, r20
    13b2:	02 d0       	rcall	.+4      	; 0x13b8 <__ultoa_invert+0x84>
    13b4:	a9 f7       	brne	.-22     	; 0x13a0 <__ultoa_invert+0x6c>
    13b6:	ea cf       	rjmp	.-44     	; 0x138c <__ultoa_invert+0x58>
    13b8:	b4 e0       	ldi	r27, 0x04	; 4
    13ba:	a6 95       	lsr	r26
    13bc:	97 95       	ror	r25
    13be:	87 95       	ror	r24
    13c0:	77 95       	ror	r23
    13c2:	67 95       	ror	r22
    13c4:	ba 95       	dec	r27
    13c6:	c9 f7       	brne	.-14     	; 0x13ba <__ultoa_invert+0x86>
    13c8:	00 97       	sbiw	r24, 0x00	; 0
    13ca:	61 05       	cpc	r22, r1
    13cc:	71 05       	cpc	r23, r1
    13ce:	08 95       	ret
    13d0:	9b 01       	movw	r18, r22
    13d2:	ac 01       	movw	r20, r24
    13d4:	0a 2e       	mov	r0, r26
    13d6:	06 94       	lsr	r0
    13d8:	57 95       	ror	r21
    13da:	47 95       	ror	r20
    13dc:	37 95       	ror	r19
    13de:	27 95       	ror	r18
    13e0:	ba 95       	dec	r27
    13e2:	c9 f7       	brne	.-14     	; 0x13d6 <__ultoa_invert+0xa2>
    13e4:	62 0f       	add	r22, r18
    13e6:	73 1f       	adc	r23, r19
    13e8:	84 1f       	adc	r24, r20
    13ea:	95 1f       	adc	r25, r21
    13ec:	a0 1d       	adc	r26, r0
    13ee:	08 95       	ret

000013f0 <_exit>:
    13f0:	f8 94       	cli

000013f2 <__stop_program>:
    13f2:	ff cf       	rjmp	.-2      	; 0x13f2 <__stop_program>
