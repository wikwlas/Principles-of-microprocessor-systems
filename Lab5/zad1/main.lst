   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	__vector_13
  12               	__vector_13:
  13               	.LFB0:
  14               		.file 1 "main.c"
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <avr/interrupt.h>
   3:main.c        **** 
   4:main.c        **** #define BAUD 1000000
   5:main.c        **** 
   6:main.c        **** #define MY_UBRR (( F_CPU / (16 * BAUD))-1 )
   7:main.c        **** 
   8:main.c        **** 
   9:main.c        **** volatile uint8_t znak = 0;
  10:main.c        **** 
  11:main.c        **** volatile char *pbuf;
  12:main.c        **** 
  13:main.c        **** ISR(USART_RXC_vect) {
  15               		.loc 1 13 0
  16               		.cfi_startproc
  17 0000 1F92      		push r1
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 1, -2
  21 0002 0F92      		push r0
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 0, -3
  25 0004 0FB6      		in r0,__SREG__
  26 0006 0F92      		push r0
  27 0008 1124      		clr __zero_reg__
  28 000a 8F93      		push r24
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 24, -4
  32               	/* prologue: Signal */
  33               	/* frame size = 0 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  14:main.c        **** 	znak = UDR;
  36               		.loc 1 14 0
  37 000c 8CB1      		in r24,0xc
  38 000e 8093 0000 		sts znak,r24
  39               	/* epilogue start */
  15:main.c        **** }
  40               		.loc 1 15 0
  41 0012 8F91      		pop r24
  42 0014 0F90      		pop r0
  43 0016 0FBE      		out __SREG__,r0
  44 0018 0F90      		pop r0
  45 001a 1F90      		pop r1
  46 001c 1895      		reti
  47               		.cfi_endproc
  48               	.LFE0:
  50               	.global	__vector_15
  52               	__vector_15:
  53               	.LFB1:
  16:main.c        **** 
  17:main.c        **** ISR(USART_TXC_vect) {
  54               		.loc 1 17 0
  55               		.cfi_startproc
  56 001e 1F92      		push r1
  57               	.LCFI3:
  58               		.cfi_def_cfa_offset 3
  59               		.cfi_offset 1, -2
  60 0020 0F92      		push r0
  61               	.LCFI4:
  62               		.cfi_def_cfa_offset 4
  63               		.cfi_offset 0, -3
  64 0022 0FB6      		in r0,__SREG__
  65 0024 0F92      		push r0
  66 0026 1124      		clr __zero_reg__
  67 0028 8F93      		push r24
  68               	.LCFI5:
  69               		.cfi_def_cfa_offset 5
  70               		.cfi_offset 24, -4
  71 002a 9F93      		push r25
  72               	.LCFI6:
  73               		.cfi_def_cfa_offset 6
  74               		.cfi_offset 25, -5
  75 002c EF93      		push r30
  76               	.LCFI7:
  77               		.cfi_def_cfa_offset 7
  78               		.cfi_offset 30, -6
  79 002e FF93      		push r31
  80               	.LCFI8:
  81               		.cfi_def_cfa_offset 8
  82               		.cfi_offset 31, -7
  83               	/* prologue: Signal */
  84               	/* frame size = 0 */
  85               	/* stack size = 7 */
  86               	.L__stack_usage = 7
  18:main.c        **** 	if(*pbuf) {
  87               		.loc 1 18 0
  88 0030 E091 0000 		lds r30,pbuf
  89 0034 F091 0000 		lds r31,pbuf+1
  90 0038 8081      		ld r24,Z
  91 003a 8823      		tst r24
  92 003c 01F0      		breq .L2
  19:main.c        **** 		UDR =*(pbuf++);
  93               		.loc 1 19 0
  94 003e CF01      		movw r24,r30
  95 0040 0196      		adiw r24,1
  96 0042 9093 0000 		sts pbuf+1,r25
  97 0046 8093 0000 		sts pbuf,r24
  98 004a 8081      		ld r24,Z
  99 004c 8CB9      		out 0xc,r24
 100               	.L2:
 101               	/* epilogue start */
  20:main.c        **** 	}
  21:main.c        **** }
 102               		.loc 1 21 0
 103 004e FF91      		pop r31
 104 0050 EF91      		pop r30
 105 0052 9F91      		pop r25
 106 0054 8F91      		pop r24
 107 0056 0F90      		pop r0
 108 0058 0FBE      		out __SREG__,r0
 109 005a 0F90      		pop r0
 110 005c 1F90      		pop r1
 111 005e 1895      		reti
 112               		.cfi_endproc
 113               	.LFE1:
 115               	.global	USART_init
 117               	USART_init:
 118               	.LFB2:
  22:main.c        **** 
  23:main.c        **** void USART_init(void) {
 119               		.loc 1 23 0
 120               		.cfi_startproc
 121               	/* prologue: function */
 122               	/* frame size = 0 */
 123               	/* stack size = 0 */
 124               	.L__stack_usage = 0
  24:main.c        **** 	UBRRH = (uint8_t) (MY_UBRR >> 8);
 125               		.loc 1 24 0
 126 0060 10BC      		out 0x20,__zero_reg__
  25:main.c        **** 	UBRRL = (uint8_t) (MY_UBRR & 0xff);
 127               		.loc 1 25 0
 128 0062 19B8      		out 0x9,__zero_reg__
  26:main.c        **** 	UCSRB = (1<<RXCIE) | (1<<TXCIE) | (1<<RXEN) | (1<<TXEN);
 129               		.loc 1 26 0
 130 0064 88ED      		ldi r24,lo8(-40)
 131 0066 8AB9      		out 0xa,r24
  27:main.c        **** 	UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);
 132               		.loc 1 27 0
 133 0068 86E8      		ldi r24,lo8(-122)
 134 006a 80BD      		out 0x20,r24
 135 006c 0895      		ret
 136               		.cfi_endproc
 137               	.LFE2:
 139               	.global	USART_send
 141               	USART_send:
 142               	.LFB3:
  28:main.c        **** }
  29:main.c        **** 
  30:main.c        **** void USART_send(char *tekst) {
 143               		.loc 1 30 0
 144               		.cfi_startproc
 145               	.LVL0:
 146               	/* prologue: function */
 147               	/* frame size = 0 */
 148               	/* stack size = 0 */
 149               	.L__stack_usage = 0
  31:main.c        **** 	UDR=*tekst;
 150               		.loc 1 31 0
 151 006e FC01      		movw r30,r24
 152 0070 2191      		ld r18,Z+
 153 0072 2CB9      		out 0xc,r18
 154               	.LVL1:
  32:main.c        **** 	pbuf= ++tekst;
 155               		.loc 1 32 0
 156 0074 F093 0000 		sts pbuf+1,r31
 157 0078 E093 0000 		sts pbuf,r30
 158 007c 0895      		ret
 159               		.cfi_endproc
 160               	.LFE3:
 162               		.section	.rodata.str1.1,"aMS",@progbits,1
 163               	.LC0:
 164 0000 4865 6C6C 		.string	"Hello\r\n"
 164      6F0D 0A00 
 165               	.LC1:
 166 0008 4F4B 0D0A 		.string	"OK\r\n"
 166      00
 167               		.section	.text.startup,"ax",@progbits
 168               	.global	main
 170               	main:
 171               	.LFB4:
  33:main.c        **** }
  34:main.c        **** 
  35:main.c        **** int main(void){
 172               		.loc 1 35 0
 173               		.cfi_startproc
 174               	/* prologue: function */
 175               	/* frame size = 0 */
 176               	/* stack size = 0 */
 177               	.L__stack_usage = 0
  36:main.c        **** 	USART_init(); //inicjalizacja portu szeregowego
 178               		.loc 1 36 0
 179 0000 0E94 0000 		call USART_init
 180               	.LVL2:
  37:main.c        **** 	sei(); //wlaczenie przerwan globalnie
 181               		.loc 1 37 0
 182               	/* #APP */
 183               	 ;  37 "main.c" 1
 184 0004 7894      		sei
 185               	 ;  0 "" 2
  38:main.c        **** 	
  39:main.c        **** 	USART_send("Hello\r\n");
 186               		.loc 1 39 0
 187               	/* #NOAPP */
 188 0006 80E0      		ldi r24,lo8(.LC0)
 189 0008 90E0      		ldi r25,hi8(.LC0)
 190               	.L14:
 191 000a 0E94 0000 		call USART_send
 192               	.LVL3:
 193               	.L11:
  40:main.c        **** 	
  41:main.c        **** 	while(1){
  42:main.c        **** 		if (znak=='x') {
 194               		.loc 1 42 0
 195 000e 8091 0000 		lds r24,znak
 196 0012 8837      		cpi r24,lo8(120)
 197 0014 01F4      		brne .L11
  43:main.c        **** 			znak=0;
 198               		.loc 1 43 0
 199 0016 1092 0000 		sts znak,__zero_reg__
  44:main.c        **** 			USART_send("OK\r\n");
 200               		.loc 1 44 0
 201 001a 80E0      		ldi r24,lo8(.LC1)
 202 001c 90E0      		ldi r25,hi8(.LC1)
 203 001e 00C0      		rjmp .L14
 204               		.cfi_endproc
 205               	.LFE4:
 207               		.comm	pbuf,2,1
 208               	.global	znak
 209               		.section .bss
 212               	znak:
 213 0000 00        		.zero	1
 214               		.text
 215               	.Letext0:
 216               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccjtZFVp.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccjtZFVp.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccjtZFVp.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccjtZFVp.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccjtZFVp.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccjtZFVp.s:12     .text:0000000000000000 __vector_13
     /tmp/ccjtZFVp.s:212    .bss:0000000000000000 znak
     /tmp/ccjtZFVp.s:52     .text:000000000000001e __vector_15
                            *COM*:0000000000000002 pbuf
     /tmp/ccjtZFVp.s:117    .text:0000000000000060 USART_init
     /tmp/ccjtZFVp.s:141    .text:000000000000006e USART_send
     /tmp/ccjtZFVp.s:170    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
